{"version":3,"file":"proxy-web.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAyBP,IACH,oBAAXQ,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeX,EAASQ,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeX,EAAS,aAAc,CAAEY,OAAO,GAAO,G,mBCD9DC,OAAOC,YAAc,CACnBC,OAAQ,CAACC,KAAqBC,IACrB,IAAIC,SAAoBC,IAC7B,MAAMC,EAAU,oBAAoBJ,sBAEpCK,QAAQC,KAAKF,GACbD,EAAQ,CACNI,OAAO,EACPH,QAASA,EACTI,KAAM,CAAC,GACP,IAGNC,GAAI,CAACT,EAAkBU,KACrBL,QAAQC,KAAK,iCAAiCN,sBAA6B,EAE7EW,KAAM,CAACX,KAAqBC,KAC1BI,QAAQC,KAAK,kBAAkBN,sBAA6B,EAE9DY,eAAgB,CAACZ,EAAkBU,KACjCL,QAAQC,KAAK,iCAAiCN,sBAA6B,EAE7Ea,kBAAoBb,IAClBK,QAAQC,KAAK,+CAA+C,G","sources":["webpack://@scrowl/editor/webpack/universalModuleDefinition","webpack://@scrowl/editor/webpack/bootstrap","webpack://@scrowl/editor/webpack/runtime/make namespace object","webpack://@scrowl/editor/./src/server/proxy.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ApiResult } from '../main/services/requester/requester.types';\n\ntype Listener = (...args: unknown[]) => void;\n\nwindow.scrowlProxy = {\n  invoke: (endpoint: string, ...args: unknown[]) => {\n    return new Promise<ApiResult>((resolve) => {\n      const message = `Unable to invoke ${endpoint}: method not ready`;\n\n      console.warn(message);\n      resolve({\n        error: true,\n        message: message,\n        data: {},\n      });\n    });\n  },\n  on: (endpoint: string, listener: Listener) => {\n    console.warn(`Unable to set on listener for ${endpoint}: method not ready`);\n  },\n  send: (endpoint: string, ...args: unknown[]) => {\n    console.warn(`Unable to send ${endpoint}: method not ready`);\n  },\n  removeListener: (endpoint: string, listener: Listener) => {\n    console.warn(`Unable to remove listener for ${endpoint}: method not ready`);\n  },\n  removeListenerAll: (endpoint: string) => {\n    console.warn(`Unable to remove listeners: method not ready`);\n  },\n};"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","window","scrowlProxy","invoke","endpoint","args","Promise","resolve","message","console","warn","error","data","on","listener","send","removeListener","removeListenerAll"],"sourceRoot":""}