"use strict";(self.webpackChunk_scrowl_template_two_column=self.webpackChunk_scrowl_template_two_column||[]).push([[815],{733:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ TwoColumn)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst Column = ({ field, className, heading, body, isEdit, focusElement }) => {\n    const Scrowl = window[\'Scrowl\'];\n    const Markdown = Scrowl.core.Markdown;\n    let headingClasses = `can-focus`;\n    let bodyClasses = `can-focus`;\n    if (focusElement === `${field}.heading`) {\n        headingClasses += \' hasFocus\';\n    }\n    if (focusElement === `${field}.body`) {\n        bodyClasses += \' hasFocus\';\n    }\n    const handleFocusHeading = () => {\n        if (isEdit) {\n            Scrowl.core.host.sendMessage({\n                type: \'focus\',\n                field: `${field}.heading`,\n            });\n        }\n    };\n    const handleFocusBody = () => {\n        if (isEdit) {\n            Scrowl.core.host.sendMessage({\n                type: \'focus\',\n                field: `${field}.body`,\n            });\n        }\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: className },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", { className: headingClasses, onMouseDown: handleFocusHeading }, heading.value),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: bodyClasses, onMouseDown: handleFocusBody },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Markdown, null, body.value))));\n};\nconst TwoColumn = ({ id, schema, ...props }) => {\n    const Scrowl = window[\'Scrowl\'];\n    let classes = `template-two-columns`;\n    let columnClasses = \'column-wrapper\';\n    const editMode = props.editMode ? true : false;\n    const focusElement = editMode ? props.focusElement : null;\n    const contentId = `${id}-two-column`;\n    const options = schema.content.options;\n    const alignment = options.content.alignment.value;\n    const numberOfColumns = options.content.numberOfColumns.value;\n    const stackOnMobile = options.content.stackOnMobile.value;\n    const firstColumn = schema.content.firstColumn.content;\n    const secondColumn = schema.content.secondColumn.content;\n    const thirdColumn = schema.content.thirdColumn.content;\n    const disableAnimation = schema.controlOptions.disableAnimations?.value;\n    if (stackOnMobile) {\n        switch (numberOfColumns) {\n            case 3:\n                columnClasses += \' stacked-view-wide\';\n                break;\n            case 2:\n                columnClasses += \' stacked-view-narrow\';\n                break;\n            case 1:\n                columnClasses += \' stacked-view-single\';\n                break;\n        }\n    }\n    if (alignment) {\n        columnClasses += ` ${alignment}`;\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrowl.core.Template, { id: `slide-${contentId}`, className: classes, notScene: disableAnimation ? true : false, ...props },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { id: contentId },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: columnClasses },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Column, { isEdit: editMode, focusElement: focusElement, className: "column first-column", field: "firstColumn", heading: firstColumn.heading, body: firstColumn.body }),\n                numberOfColumns >= 2 && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Column, { isEdit: editMode, focusElement: focusElement, className: "column second-column", field: "secondColumn", heading: secondColumn.heading, body: secondColumn.body })),\n                numberOfColumns >= 3 && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Column, { isEdit: editMode, focusElement: focusElement, className: "column third-column", field: "thirdColumn", heading: thirdColumn.heading, body: thirdColumn.body }))))));\n};\n\n\n\n//# sourceURL=webpack://@scrowl/template-two-column/./src/two-column.tsx?')}}]);