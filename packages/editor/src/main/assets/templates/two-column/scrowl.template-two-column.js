!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(self,(()=>(()=>{"use strict";var __webpack_modules__={334:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n;// CONCATENATED MODULE: external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}\nconst external_root_React_commonjs_react_commonjs2_react_namespaceObject = window[undefined];\nvar external_root_React_commonjs_react_commonjs2_react_default = /*#__PURE__*/__webpack_require__.n(external_root_React_commonjs_react_commonjs2_react_namespaceObject);\n;// CONCATENATED MODULE: external {\"root\":\"Scrowl\",\"commonjs\":\"@scrowl/template-core\",\"commonjs2\":\"@scrowl/template-core\"}\nconst template_core_namespaceObject = window[undefined];\nvar template_core_default = /*#__PURE__*/__webpack_require__.n(template_core_namespaceObject);\n;// CONCATENATED MODULE: ./src/_index.scss\n// extracted by mini-css-extract-plugin\nvar canFocus = \"can-focus\";\nvar columnWrapper = \"column-wrapper\";\nvar editMode = \"edit-mode\";\nvar hasFocus = \"has-focus\";\nvar header = \"header\";\nvar hero = \"hero\";\nvar img = \"img\";\nvar overlay = \"overlay\";\nvar right = \"right\";\nvar showProgress = \"show-progress\";\nvar stackedViewNarrow = \"stacked-view-narrow\";\nvar stackedViewWide = \"stacked-view-wide\";\nvar templateBlockText = \"template-block-text\";\nvar _index_text = \"text\";\nvar wrapper = \"wrapper\";\n;// CONCATENATED MODULE: ./src/two-column.tsx\n\n\n\nconst TwoColumn = ({ schema, ...props }) => {\n    let classes = `${templateBlockText} `;\n    const editMode = props.editMode ? true : false;\n    const focusElement = editMode ? props.focusElement : null;\n    const scrollScenes = external_root_React_commonjs_react_commonjs2_react_default().useRef([]);\n    const timeline = external_root_React_commonjs_react_commonjs2_react_default().useRef();\n    let layoutTextLeft = schema.content.leftColumn.textLeft.value;\n    let layoutTextRight = schema.content.rightColumn.textRight.value;\n    let layoutTextMiddle = schema.content.middleColumn?.textMiddle.value;\n    let headingLeft = schema.content.leftColumn.headingLeft?.value;\n    let headingRight = schema.content.rightColumn.headingRight?.value;\n    let headingMiddle = schema.content.middleColumn?.headingMiddle?.value;\n    let numberOfColumns = schema.content.columnOptions.numberOfColumns;\n    let stackOnMobile = schema.content.columnOptions.stackOnMobile;\n    let useImageAsBG = schema.content.bgImage?.content.bg.value;\n    let alignment = schema.content.options.content.alignment.value;\n    let showProgressBar = schema.content.options.content.showProgress.value;\n    const slideDuration = showProgressBar ? 1000 : 0;\n    if (showProgressBar) {\n        classes += ' show-progress';\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function getId(id) {\n        if (!id) {\n            return props.id;\n        }\n        return props.id + '-' + id;\n    }\n    // const handleScrollUpdate = (e: any) => {\n    //   if (e.stage === 'body') {\n    //     timeline.current.seek(timeline.current.duration * e.stageProgress);\n    //   }\n    // };\n    const handleStateChange = (e) => {\n        if (e.state === 'visible') {\n            scrollScenes.current.map((scene) => scene.enabled(true));\n        }\n        else {\n            scrollScenes.current.map((scene) => scene.enabled(false));\n        }\n    };\n    external_root_React_commonjs_react_commonjs2_react_default().useEffect(() => {\n        if (!showProgressBar) {\n            return () => { };\n        }\n        scrollScenes.current.push(new (template_core_default()).core.scroll.Scene({\n            triggerElement: '#' + getId(),\n            duration: slideDuration,\n            offset: 0,\n            triggerHook: 0,\n        })\n            .setPin('#' + getId('pinned-body'), { pushFollowers: false })\n            .addTo(props.controller)\n            .enabled(false));\n        timeline.current = template_core_default().core.anime.timeline({\n            easing: 'easeInOutQuad',\n            autoplay: false,\n        });\n        const currentTimeline = timeline.current;\n        const target = {\n            targets: '#' + getId('bar'),\n            width: '100%',\n            duration: slideDuration,\n        };\n        currentTimeline.add(target);\n        return () => {\n            scrollScenes.current.forEach((scene) => {\n                scene.destroy(true);\n                props.controller.removeScene(scene);\n            });\n            scrollScenes.current = [];\n            currentTimeline.children.map((child) => {\n                child.remove(target);\n                child.reset();\n                currentTimeline.remove(child);\n            });\n            currentTimeline.reset();\n        };\n    }, [showProgressBar]);\n    const renderColumns = () => {\n        return (external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: `column-wrapper ${stackOnMobile && numberOfColumns === 3\n                ? 'stacked-view-wide'\n                : stackOnMobile && numberOfColumns === 2\n                    ? 'stacked-view-narrow'\n                    : ''}` },\n            external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"left\" },\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"h2\", null, headingLeft),\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"p\", { className: 'can-focus ' + (focusElement === 'text' && ' has-focus'), onMouseDown: () => {\n                        if (editMode) {\n                            // Scrowl.focusOnlayout('text');\n                        }\n                    } },\n                    external_root_React_commonjs_react_commonjs2_react_default().createElement((template_core_default()).core.Markdown, { children: layoutTextLeft }))),\n            numberOfColumns === 2 ? null : (external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"middle\" },\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"h2\", null, headingMiddle),\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"p\", { className: 'can-focus ' + (focusElement === 'text' && ' has-focus'), onMouseDown: () => {\n                        if (editMode) {\n                            // Scrowl.focusOnlayout('text');\n                        }\n                    } },\n                    external_root_React_commonjs_react_commonjs2_react_default().createElement((template_core_default()).core.Markdown, { children: layoutTextMiddle })))),\n            external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"right\" },\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"h2\", null, headingRight),\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"p\", { className: 'can-focus ' + (focusElement === 'text' && ' has-focus'), onMouseDown: () => {\n                        if (editMode) {\n                            // Scrowl.focusOnlayout('text');\n                        }\n                    } },\n                    external_root_React_commonjs_react_commonjs2_react_default().createElement((template_core_default()).core.Markdown, { children: layoutTextRight })))));\n    };\n    return (external_root_React_commonjs_react_commonjs2_react_default().createElement((template_core_default()).core.Template, { ...props, className: classes, duration: slideDuration, onStateChange: handleStateChange, \n        // onScroll={handleScrollUpdate}\n        ready: true },\n        external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"slide-container\" },\n            external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { id: getId('pinned-body'), className: \"hero\", \"aria-label\": useImageAsBG ? schema['bgImage.alt'] : '', style: useImageAsBG && schema['bgImage.url']\n                    ? {\n                        width: '100vw',\n                        height: '100vh',\n                        backgroundImage: 'url(\"./course/assets/' + schema['bgImage.url'] + '\")',\n                    }\n                    : {} },\n                useImageAsBG ? external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"overlay\" }) : null,\n                external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: 'text ' + (alignment === 'right' ? ' right' : '') },\n                    external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { className: \"wrapper\" }, renderColumns())),\n                useImageAsBG ? null : (external_root_React_commonjs_react_commonjs2_react_default().createElement(\"div\", { role: \"img\", \"aria-label\": schema['hero_image.alt'], className: 'img ' +\n                        (alignment === 'right' ? ' right' : '') +\n                        ' can-focus ' +\n                        (focusElement === 'bgImage.url' && ' has-focus'), onMouseDown: () => {\n                        if (editMode) {\n                            // Scrowl.focusOnlayout('bgImage.url');\n                        }\n                    }, style: schema['bgImage.url']\n                        ? {\n                            backgroundImage: 'url(\"./course/assets/' + schema['bgImage.url'] + '\")',\n                        }\n                        : {} }))))));\n};\n/* harmony default export */ const two_column = ({\n    TwoColumn,\n});\n\n;// CONCATENATED MODULE: ./src/two-column.schema.ts\nconst TwoColumnSchema = {\n    meta: {\n        version: '1.0.0',\n        label: 'Two Column',\n        component: 'TwoColumn',\n        filename: 'two-column',\n    },\n    content: {\n        leftColumn: {\n            headingLeft: {\n                type: 'Textbox',\n                label: 'Left Heading',\n                value: 'Left Heading',\n                placeholder: 'Left Heading',\n                multiLine: true,\n                lines: 5,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n            textLeft: {\n                type: 'Textbox',\n                label: 'Left Content',\n                value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n                placeholder: 'Write content here...',\n                multiLine: true,\n                lines: 10,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n        },\n        rightColumn: {\n            headingRight: {\n                type: 'Textbox',\n                label: 'Right Heading',\n                value: 'Right Heading',\n                placeholder: 'Right Heading',\n                multiLine: true,\n                lines: 5,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n            textRight: {\n                type: 'Textbox',\n                label: 'Right Content',\n                value: 'RIGHT DIFFERENT TEXT ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n                placeholder: 'Write content here...',\n                multiLine: true,\n                lines: 10,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n        },\n        middleColumn: {\n            headingMiddle: {\n                type: 'Textbox',\n                label: 'Middle Heading',\n                value: 'Middle Heading',\n                placeholder: 'Middle Heading',\n                multiLine: true,\n                lines: 5,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n            textMiddle: {\n                type: 'Textbox',\n                label: 'Middle Content',\n                value: 'This is the middle text... ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n                placeholder: 'Write content here...',\n                multiLine: true,\n                lines: 10,\n                autoGrow: 10,\n                allowLinebreaks: true,\n            },\n        },\n        columnOptions: {\n            numberOfColumns: 3,\n            stackOnMobile: true,\n        },\n        bgImage: {\n            type: 'Fieldset',\n            label: 'Background Image',\n            content: {\n                alt: {\n                    type: 'Textbox',\n                    label: 'Alt Text',\n                    placeholder: 'Image alt text',\n                },\n                url: {\n                    type: 'Asset',\n                    assetType: 'image',\n                    label: 'Image',\n                },\n                bg: {\n                    type: 'Checkbox',\n                    label: 'Use as Background',\n                    value: false,\n                },\n            },\n        },\n        options: {\n            type: 'Fieldset',\n            label: 'Options',\n            content: {\n                alignment: {\n                    type: 'Select',\n                    hint: 'BodyAlignment',\n                    label: 'Alignment',\n                    value: 'left',\n                    options: [\n                        {\n                            name: 'Align Left',\n                            value: 'left',\n                            icon: 'align_horizontal_left',\n                        },\n                        {\n                            name: 'Align Right',\n                            value: 'right',\n                            icon: 'align_horizontal_right',\n                        },\n                    ],\n                    iconFromValue: true,\n                },\n                showProgress: {\n                    type: 'Checkbox',\n                    label: 'Show Progress Bar',\n                    value: false,\n                },\n            },\n        },\n    },\n};\n/* harmony default export */ const two_column_schema = ({\n    TwoColumnSchema,\n});\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\n;// CONCATENATED MODULE: ./web/index.ts\n\nwindow.TwoColumn = TwoColumn;\nwindow.TwoColumnSchema = TwoColumnSchema;\n\n\n//# sourceURL=webpack://@scrowl/template-two-column/./web/index.ts_+_6_modules?")}},__webpack_require__={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},d:(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},__webpack_exports__={};return __webpack_modules__[334](0,__webpack_exports__,__webpack_require__),__webpack_exports__})()));