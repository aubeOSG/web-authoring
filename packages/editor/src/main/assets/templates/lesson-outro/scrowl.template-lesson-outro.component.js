"use strict";(self.webpackChunk_scrowl_template_lesson_outro=self.webpackChunk_scrowl_template_lesson_outro||[]).push([[252],{685:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ LessonOutro)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst LessonOutro = ({ id, schema, lesson, attempt, ...props }) => {\n    const Scrowl = window[\'Scrowl\'];\n    let classes = \'template-lesson-outro\';\n    const editMode = props.editMode ? true : false;\n    const focusElement = editMode ? props.focusElement : null;\n    const contentId = `${id}-lesson-outro`;\n    const title = schema.content.title.value;\n    let titleClasses = \'template-lesson-outro-title can-focus\';\n    const bg = schema.content.bgImage.content.bg.value;\n    const bgUrl = schema.content.bgImage.content.url.value;\n    const bgLabel = schema.content.bgImage.content.alt.value || \'\';\n    let bgClasses = `img__wrapper can-focus ${bg ? \'as-bg\' : \'as-hero\'}`;\n    const bgRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const bgStyles = {\n        backgroundImage: `url("${bgUrl}")`,\n    };\n    const disableAnimations = schema.controlOptions.disableAnimations?.value;\n    let lessonQuestions;\n    let setLessonQuestions;\n    if (!editMode) {\n        [lessonQuestions, setLessonQuestions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n        //@ts-ignore\n        lesson.attempts[attempt.current].questions);\n    }\n    const threshold = 60;\n    if (focusElement === \'title\') {\n        titleClasses += \' has-focus\';\n    }\n    switch (focusElement) {\n        case \'title\':\n            titleClasses += \' has-focus\';\n            break;\n        case \'bgImage.url\':\n            bgClasses += \' has-focus\';\n            break;\n        default:\n            console.warn(\'Unsupported element\', focusElement);\n            break;\n    }\n    const handleFocusTitle = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: \'focus\',\n                field: \'title\',\n            });\n        }\n    };\n    const handleFocusBg = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: \'focus\',\n                field: \'bgImage.url\',\n            });\n        }\n    };\n    const getScore = () => {\n        let score = 0;\n        const correctAnswers = lessonQuestions?.filter((question) => {\n            return question.correct === true;\n        });\n        if (correctAnswers) {\n            score = correctAnswers.length / lessonQuestions.length;\n            return Math.ceil((score * 100) / 5) * 5;\n        }\n        else {\n            return score;\n        }\n    };\n    let score = getScore();\n    const resetQuiz = () => {\n        if (editMode) {\n            return;\n        }\n        const resetQuiz = new CustomEvent(\'resetQuiz\', {\n            detail: lessonQuestions,\n        });\n        document.dispatchEvent(resetQuiz);\n        if (lesson && lesson.attempts && attempt) {\n            setLessonQuestions([...lesson.attempts[attempt.current].questions]);\n        }\n        score = 0;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const handleUpdateOutro = (ev) => {\n            if (editMode) {\n                return;\n            }\n            const updatedQuestions = lessonQuestions;\n            lessonQuestions.forEach((question, idx) => {\n                if (question.id === ev.detail.contentId) {\n                    updatedQuestions[idx] = ev.detail;\n                }\n                setLessonQuestions([...updatedQuestions]);\n            });\n        };\n        document.addEventListener(\'updateOutro\', handleUpdateOutro);\n        //@ts-ignore\n    }, [lesson?.attempts[attempt.current].questions]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (score && score > threshold) {\n            const passLessonEvent = new CustomEvent(\'passLesson\', {\n                detail: score,\n            });\n            document.dispatchEvent(passLessonEvent);\n        }\n    }, [score]);\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrowl.core.Template, { id: `slide-${contentId}`, className: classes, notScene: disableAnimations ? true : false, style: { overflow: \'hidden\' }, ...props },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { id: contentId, className: "content" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("header", null,\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h1", { className: titleClasses, onMouseDown: handleFocusTitle }, title),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: "results-container" },\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", null,\n                        "Score: ",\n                        score,\n                        "%"),\n                    score && score > threshold ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", null, "PASS") : react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", null, "FAIL")),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("table", { className: "questions-table" },\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("thead", null,\n                        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("tr", null,\n                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("th", null, "Question"),\n                            react__WEBPACK_IMPORTED_MODULE_0___default().createElement("th", null, "Correct"))),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("tbody", null, lessonQuestions &&\n                        lessonQuestions.map((question, idx) => {\n                            return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("tr", { key: idx },\n                                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("td", null, question.question),\n                                question.correct ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement("td", null, "Correct") : react__WEBPACK_IMPORTED_MODULE_0___default().createElement("td", null, "Incorrect")));\n                        }))),\n                score < threshold && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", { onClick: resetQuiz }, "Retake Quiz"))),\n            (bgUrl || editMode) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { ref: bgRef, className: bgClasses, onMouseDown: handleFocusBg },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", { className: "img__container", "aria-label": bgLabel, style: bgStyles }))))));\n};\n\n\n\n//# sourceURL=webpack://@scrowl/template-lesson-outro/./src/lesson-outro.tsx?')}}]);