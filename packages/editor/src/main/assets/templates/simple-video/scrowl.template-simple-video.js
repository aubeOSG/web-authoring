!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n(require("React"));else if("function"==typeof define&&define.amd)define(["React"],n);else{var t="object"==typeof exports?n(require("React")):n(e.React);for(var s in t)("object"==typeof exports?exports:e)[s]=t[s]}}(self,(__WEBPACK_EXTERNAL_MODULE__24__=>(()=>{"use strict";var __webpack_modules__={141:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: external \"React\"\nvar external_React_ = __webpack_require__(24);\nvar external_React_default = /*#__PURE__*/__webpack_require__.n(external_React_);\n;// CONCATENATED MODULE: ./src/simple-video.tsx\n\n\nconst SimpleVideo = ({ id, schema, ...props }) => {\n    const Scrowl = window['Scrowl'];\n    let classes = 'template-simple-video';\n    const Markdown = Scrowl.core.Markdown;\n    const editMode = props.editMode ? true : false;\n    const focusElement = editMode ? props.focusElement : null;\n    const contentId = `${id}-simple-video`;\n    const text = schema.content.text.value;\n    const textFocusCss = focusElement === 'text' && 'has-focus';\n    const bg = schema.content.bgImage.content.bg.value;\n    const bgUrl = schema.content.bgImage.content.url.value;\n    const bgLabel = schema.content.bgImage.content.alt.value || '';\n    const bgFocusCss = focusElement === 'bgImage.url' && 'has-focus';\n    const bgRef = (0,external_React_.useRef)(null);\n    const bgStyles = {\n        backgroundImage: `url(\"${bgUrl}\")`,\n    };\n    const alignment = schema.content.options.content.alignment.value;\n    const alignmentCss = alignment === 'right' ? 'right' : 'left';\n    const showProgressBar = schema.content.options.content.showProgress.value;\n    const showProgressRef = (0,external_React_.useRef)(showProgressBar);\n    const slideProgress = (0,external_React_.useRef)(0);\n    const [progressBarStyles, setProgressBarStyles] = (0,external_React_.useState)({\n        width: showProgressBar ? '0%' : '100%',\n    });\n    // @ts-ignore\n    const [videoEnded, setVideoEnded] = (0,external_React_.useState)(false);\n    if (showProgressBar) {\n        classes += ' show-progress';\n    }\n    const handleFocusText = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'text',\n            });\n        }\n    };\n    const handleFocusBg = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'bgImage.url',\n            });\n        }\n    };\n    const handleSlideProgress = (ev) => {\n        slideProgress.current = ev.progress;\n        if (showProgressRef.current) {\n            setProgressBarStyles({\n                ...progressBarStyles,\n                width: `${ev.progress}%`,\n            });\n        }\n    };\n    // const handleSlideEnd = () => {\n    //   slideProgress.current = 100;\n    //   if (!showProgressRef.current) {\n    //     return;\n    //   }\n    //   setProgressBarStyles({\n    //     ...progressBarStyles,\n    //     width: `100%`,\n    //   });\n    // };\n    (0,external_React_.useEffect)(() => {\n        showProgressRef.current = showProgressBar;\n        setProgressBarStyles({\n            ...progressBarStyles,\n            width: showProgressBar ? `${slideProgress.current}%` : `100%`,\n        });\n    }, [showProgressBar]);\n    const handleVideoEnd = (ev) => {\n        const videoEnded = new CustomEvent('videoEnded', { detail: ev });\n        document.dispatchEvent(videoEnded);\n    };\n    return (external_React_default().createElement(Scrowl.core.Template, { id: `slide-${contentId}`, className: classes, onProgress: handleSlideProgress, ...props },\n        external_React_default().createElement(\"div\", { id: contentId, className: \"owlui-container\" },\n            external_React_default().createElement(\"div\", { className: `owlui-row ${alignmentCss}` },\n                bg && external_React_default().createElement(\"div\", { className: \"owlui-col overlay\" }),\n                external_React_default().createElement(\"div\", { className: `owlui-col text__wrapper` },\n                    external_React_default().createElement(\"div\", { className: \"text__container\" },\n                        external_React_default().createElement(\"div\", { className: \"progress-indictor\" },\n                            external_React_default().createElement(\"div\", { className: \"progress-bar\", style: progressBarStyles })),\n                        external_React_default().createElement(\"div\", { className: `text__value can-focus ${textFocusCss}`, onMouseDown: handleFocusText },\n                            external_React_default().createElement(Markdown, null, text))))),\n            (bgUrl || editMode) && (external_React_default().createElement(\"div\", { ref: bgRef, className: `video__wrapper ${alignmentCss} can-focus ${bgFocusCss} ${bg ? 'as-bg' : 'as-side'}`, onMouseDown: handleFocusBg },\n                external_React_default().createElement(\"video\", { controls: true, onEnded: handleVideoEnd, className: \"video__container\", \"aria-label\": bgLabel, style: bgStyles },\n                    external_React_default().createElement(\"source\", { src: bgUrl })))))));\n};\n;\n/* harmony default export */ const simple_video = ({\n    SimpleVideo,\n});\n\n;// CONCATENATED MODULE: ./src/simple-video.schema.ts\nconst SimpleVideoSchema = {\n    meta: {\n        version: '1.0.0',\n        label: 'Simple Video',\n        component: 'SimpleVideo',\n        filename: 'simple-video',\n        icon: 'view_week',\n        tags: ['text', 'columns'],\n    },\n    content: {\n        text: {\n            type: 'Textbox',\n            label: 'Block Text',\n            value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n            placeholder: 'Write content here...',\n            multiLine: true,\n            lines: 10,\n            autoGrow: 10,\n            allowLinebreaks: true,\n        },\n        bgImage: {\n            type: 'Fieldset',\n            label: 'Background Image',\n            content: {\n                alt: {\n                    type: 'Textbox',\n                    label: 'Alt Text',\n                    placeholder: 'Image alt text',\n                },\n                url: {\n                    type: 'Asset',\n                    assetTypes: ['video'],\n                    label: 'Image',\n                },\n                bg: {\n                    type: 'Checkbox',\n                    label: 'Use as Background',\n                    value: false,\n                },\n            },\n        },\n        options: {\n            type: 'Fieldset',\n            label: 'Options',\n            content: {\n                alignment: {\n                    type: 'Select',\n                    hint: 'BodyAlignment',\n                    label: 'Alignment',\n                    value: 'left',\n                    options: [\n                        {\n                            name: 'Align Left',\n                            value: 'left',\n                            icon: 'align_horizontal_left',\n                        },\n                        {\n                            name: 'Align Right',\n                            value: 'right',\n                            icon: 'align_horizontal_right',\n                        },\n                    ],\n                    iconFromValue: true,\n                },\n                showProgress: {\n                    type: 'Checkbox',\n                    label: 'Show Progress Bar',\n                    value: true,\n                },\n            },\n        },\n    },\n};\n/* harmony default export */ const simple_video_schema = ({\n    SimpleVideoSchema,\n});\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\n\n\n;// CONCATENATED MODULE: ./web/index.ts\n\nwindow.SimpleVideo = SimpleVideo;\nwindow.SimpleVideoSchema = SimpleVideoSchema;\n\n\n//# sourceURL=webpack://@scrowl/template-simple-video/./web/index.ts_+_3_modules?")},24:e=>{e.exports=__WEBPACK_EXTERNAL_MODULE__24__}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(141);return __webpack_exports__})()));