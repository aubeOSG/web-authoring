{"version":3,"file":"scrowl.template-simple-text.js","mappings":"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","sources":["webpack://@scrowl/template-simple-text/webpack/universalModuleDefinition","webpack://@scrowl/template-simple-text/external umd \"React\"","webpack://@scrowl/template-simple-text/webpack/bootstrap","webpack://@scrowl/template-simple-text/webpack/runtime/compat get default export","webpack://@scrowl/template-simple-text/webpack/runtime/define property getters","webpack://@scrowl/template-simple-text/webpack/runtime/hasOwnProperty shorthand","webpack://@scrowl/template-simple-text/webpack/runtime/make namespace object","webpack://@scrowl/template-simple-text/./src/simple-text.tsx","webpack://@scrowl/template-simple-text/./src/simple-text.schema.ts","webpack://@scrowl/template-simple-text/./web/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\")) : factory(root[\"React\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__24__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__24__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { useEffect, useRef } from 'react';\nimport './_index.scss';\nimport { SimpleTextProps } from './simple-text.types';\n\nexport const SimpleText = ({ id, schema, ...props }: SimpleTextProps) => {\n  const Scrowl = window['Scrowl'];\n  let classes = `template-simple-text`;\n  const Markdown = Scrowl.core.Markdown;\n  const Anime = Scrowl.core.anime;\n  const textAnimation = useRef<any>();\n  const editMode = props.editMode ? true : false;\n  const focusElement = editMode ? props.focusElement : null;\n  const contentId = `${id}-block-text`;\n  const text = schema.content.text.value;\n  const textFocusCss = focusElement === 'text' && 'has-focus';\n  const textRef = useRef<HTMLDivElement>(null);\n  const textStyles = {\n    transform: 'translateX(100%)',\n    opacity: '0',\n  };\n  const textAnimiationDuration = 120;\n  const animations = schema.content.animateLists.value;\n  const bgUrl = schema.content.bgImage.content.url.value;\n  const bgLabel = schema.content.bgImage.content.alt.value || '';\n  const bgFocusCss = focusElement === 'bgImage.url' && 'has-focus';\n  const bgRef = useRef<HTMLDivElement>(null);\n  const bgStyles = {\n    backgroundImage: `url(\"${bgUrl}\")`,\n  };\n  const alignment = schema.content.options.content.alignment.value;\n  const alignmentCss = alignment;\n\n  switch (animations) {\n    case 'none':\n      textStyles.transform = 'translateX(0%)';\n      textStyles.opacity = '1';\n      break;\n  }\n\n  const handleFocusText = () => {\n    if (editMode) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: 'text',\n      });\n    }\n  };\n\n  const handleFocusBg = () => {\n    if (editMode) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: 'bgImage.url',\n      });\n    }\n  };\n\n  const handleSlideProgress = (ev) => {\n    const updateTextAnimation = () => {\n      if (animations === 'none') {\n        return;\n      }\n\n      if (textAnimation.current && ev.scene.progress >= 0) {\n        const seekValue =\n          textAnimiationDuration * 2 * (ev.scene.progress / 100);\n\n        textAnimation.current.seek(seekValue);\n      }\n    };\n\n    updateTextAnimation();\n  };\n\n  useEffect(() => {\n    const createAnimation = () => {\n      if (!textRef.current || !textRef.current.childNodes) {\n        return;\n      }\n\n      const initialTextStyles = Object.keys(textStyles);\n      const nodeList: Array<HTMLElement> = [];\n\n      textRef.current.childNodes.forEach((child) => {\n        const node = child as HTMLElement;\n\n        if (!node || !node.style) {\n          return;\n        }\n\n        initialTextStyles.forEach((prop) => {\n          node.style[prop] = textStyles[prop];\n        });\n\n        nodeList.push(node);\n      });\n\n      switch (animations) {\n        case 'all':\n          textAnimation.current = Anime({\n            targets: nodeList,\n            autoplay: false,\n            easing: 'easeInOutQuad',\n            opacity: '1',\n            translateX: '0',\n            duration: textAnimiationDuration,\n          });\n          break;\n        case 'none':\n          if (textAnimation) {\n            textAnimation.current.remove(nodeList);\n          }\n          break;\n      }\n    };\n\n    createAnimation();\n  }, [textRef.current, animations]);\n\n  return (\n    <Scrowl.core.Template\n      id={`slide-${contentId}`}\n      className={classes}\n      onProgress={handleSlideProgress}\n      {...props}\n    >\n      <div id={contentId} className=\"owlui-container\">\n        {(bgUrl || editMode) && (\n          <div\n            ref={bgRef}\n            className={`img__wrapper ${alignmentCss} can-focus ${bgFocusCss} as-bg`}\n            onMouseDown={handleFocusBg}\n          >\n            <img\n              className=\"img__container\"\n              aria-label={bgLabel}\n              style={bgStyles}\n            />\n          </div>\n        )}\n        <div className=\"owlui-row owlui-row-cols-1\">\n          <div className=\"owlui-col\">\n            {bgUrl && <div className=\"overlay\" />}\n\n            <div className={`text__wrapper ${alignmentCss}`}>\n              <div\n                ref={textRef}\n                className={`text__container can-focus ${textFocusCss}`}\n                onMouseDown={handleFocusText}\n              >\n                <Markdown>{text}</Markdown>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Scrowl.core.Template>\n  );\n};\n\nexport default {\n  SimpleText,\n};\n","import { SimpleTextSchemaProps } from './simple-text.types';\n\nexport const SimpleTextSchema: SimpleTextSchemaProps = {\n  meta: {\n    version: '1.0.0',\n    label: 'Simple Text',\n    component: 'SimpleText',\n    filename: 'simple-text',\n    tags: [\"text\"],\n    icon: 'notes',\n  },\n  content: {\n    text: {\n      type: 'Textbox',\n      label: 'Text',\n      value:\n        '# Starting \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur!',\n      placeholder: 'Enter your text',\n      multiLine: true,\n      lines: 10,\n      autoGrow: 10,\n      allowLinebreaks: true,\n    },\n    animateLists: {\n      type: 'Select',\n      label: 'Animations',\n      value: 'all',\n      options: [\n        { name: 'No Animation', value: 'none' },\n        { name: 'Lists & Paragraphs', value: 'all' },\n      ],\n    },\n    bgImage: {\n      type: 'Fieldset',\n      label: 'Background Image',\n      content: {\n        alt: {\n          type: 'Textbox',\n          label: 'Alt Text',\n          placeholder: 'Image alt text',\n        },\n        url: {\n          type: 'Asset',\n          assetTypes: ['image'],\n          label: 'Image',\n        },\n      },\n    },\n    options: {\n      type: 'Fieldset',\n      label: 'Options',\n      content: {\n        alignment: {\n          type: 'Select',\n          hint: 'BodyAlignment',\n          label: 'Alignment',\n          value: 'center',\n          options: [\n            {\n              name: 'Full Justify',\n              value: 'justify',\n              icon: 'align_horizontal_right',\n            },\n            {\n              name: 'Align Left',\n              value: 'left',\n              icon: 'align_horizontal_left',\n            },\n            {\n              name: 'Align Center',\n              value: 'center',\n              icon: 'align_horizontal_left',\n            },\n            {\n              name: 'Align Right',\n              value: 'right',\n              icon: 'align_horizontal_right',\n            },\n          ],\n          iconFromValue: true,\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  SimpleTextSchema,\n};\n","import { SimpleText, SimpleTextSchema, SimpleTextSchemaProps } from '../src';\n\nwindow.SimpleText = SimpleText;\nwindow.SimpleTextSchema = SimpleTextSchema as SimpleTextSchemaProps;\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__24__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","SimpleText","id","schema","props","Scrowl","window","Markdown","core","Anime","anime","textAnimation","useRef","editMode","focusElement","contentId","text","content","textFocusCss","textRef","textStyles","transform","opacity","animations","animateLists","bgUrl","bgImage","url","bgLabel","alt","bgFocusCss","bgRef","bgStyles","backgroundImage","alignmentCss","options","alignment","useEffect","current","childNodes","initialTextStyles","keys","nodeList","forEach","child","node","style","push","targets","autoplay","easing","translateX","duration","remove","createAnimation","Template","className","onProgress","ev","scene","progress","seekValue","textAnimiationDuration","seek","updateTextAnimation","ref","onMouseDown","host","sendMessage","type","field","SimpleTextSchema","meta","version","label","component","filename","tags","icon","placeholder","multiLine","lines","autoGrow","allowLinebreaks","name","assetTypes","hint","iconFromValue"],"sourceRoot":""}