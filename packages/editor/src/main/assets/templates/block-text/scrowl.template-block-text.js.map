{"version":3,"file":"scrowl.template-block-text.js","mappings":"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","sources":["webpack://@scrowl/template-block-text/webpack/universalModuleDefinition","webpack://@scrowl/template-block-text/external umd \"React\"","webpack://@scrowl/template-block-text/webpack/bootstrap","webpack://@scrowl/template-block-text/webpack/runtime/compat get default export","webpack://@scrowl/template-block-text/webpack/runtime/define property getters","webpack://@scrowl/template-block-text/webpack/runtime/hasOwnProperty shorthand","webpack://@scrowl/template-block-text/webpack/runtime/make namespace object","webpack://@scrowl/template-block-text/./src/block-text.tsx","webpack://@scrowl/template-block-text/./src/block-text.schema.ts","webpack://@scrowl/template-block-text/./web/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\")) : factory(root[\"React\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__24__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__24__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { useState, useEffect, useRef } from 'react';\nimport './_index.scss';\nimport { BlockTextProps } from './block-text.types';\n\nexport const BlockText = ({ id, schema, ...props }: BlockTextProps) => {\n  const Scrowl = window['Scrowl'];\n  let classes = 'template-block-text';\n  const Markdown = Scrowl.core.Markdown;\n  const editMode = props.editMode ? true : false;\n  const focusElement = editMode ? props.focusElement : null;\n  const contentId = `${id}-block-text`;\n  const text = schema.content.text.value;\n  const textFocusCss = focusElement === 'text' && 'has-focus';\n  const bg = schema.content.bgImage.content.bg.value;\n  const bgUrl = schema.content.bgImage.content.url.value;\n  const bgLabel = schema.content.bgImage.content.alt.value || '';\n  const bgFocusCss = focusElement === 'bgImage.url' && 'has-focus';\n  const bgRef = useRef<HTMLDivElement>(null);\n  const bgStyles = {\n    backgroundImage: `url(\"${bgUrl}\")`,\n  };\n  const alignment = schema.content.options.content.alignment.value;\n  const alignmentCss = alignment === 'right' ? 'right' : 'left';\n  const showProgressBar = schema.content.options.content.showProgress.value;\n  const showProgressRef = useRef(showProgressBar);\n  const slideProgress = useRef(0);\n  const [progressBarStyles, setProgressBarStyles] = useState({\n    width: showProgressBar ? '0%' : '100%',\n  });\n\n  if (showProgressBar) {\n    classes += ' show-progress';\n  }\n\n  const handleFocusText = () => {\n    if (editMode) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: 'text',\n      });\n    }\n  };\n\n  const handleFocusBg = () => {\n    if (editMode) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: 'bgImage.url',\n      });\n    }\n  };\n\n  const handleSlideProgress = (ev) => {\n    slideProgress.current = ev.progress;\n\n    if (showProgressRef.current) {\n      setProgressBarStyles({\n        ...progressBarStyles,\n        width: `${ev.progress}%`,\n      });\n    }\n  };\n\n  const handleSlideEnd = () => {\n    slideProgress.current = 100;\n\n    if (!showProgressRef.current) {\n      return;\n    }\n\n    setProgressBarStyles({\n      ...progressBarStyles,\n      width: `100%`,\n    });\n  };\n\n  useEffect(() => {\n    showProgressRef.current = showProgressBar;\n    setProgressBarStyles({\n      ...progressBarStyles,\n      width: showProgressBar ? `${slideProgress.current}%` : `100%`,\n    });\n  }, [showProgressBar]);\n\n  return (\n    <Scrowl.core.Template\n      id={`slide-${contentId}`}\n      className={classes}\n      onProgress={handleSlideProgress}\n      onEnd={handleSlideEnd}\n      {...props}\n    >\n      <div id={contentId} className=\"owlui-container\">\n        <div className={`owlui-row owlui-row-cols-2 ${alignmentCss}`}>\n          {bg && <div className=\"owlui-col overlay\" />}\n\n          <div className={`owlui-col text__wrapper`}>\n            <div className=\"text__container\">\n              <div className=\"progress-indictor\">\n                <div className=\"progress-bar\" style={progressBarStyles}></div>\n              </div>\n              <div\n                className={`text__value can-focus ${textFocusCss}`}\n                onMouseDown={handleFocusText}\n              >\n                <Markdown>{text}</Markdown>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {(bgUrl || editMode) && (\n        <div\n          ref={bgRef}\n          className={`img__wrapper ${alignmentCss} can-focus ${bgFocusCss} ${\n            bg ? 'as-bg' : 'as-side'\n          }`}\n          onMouseDown={handleFocusBg}\n        >\n          <img\n            className=\"img__container\"\n            aria-label={bgLabel}\n            style={bgStyles}\n          />\n        </div>\n      )}\n    </Scrowl.core.Template>\n  );\n};\n\nexport default {\n  BlockText,\n};\n","import { BlockTextSchemaProps } from './block-text.types';\n\nexport const BlockTextSchema: BlockTextSchemaProps = {\n  meta: {\n    version: \"1.0.0\",\n    label: \"Text Block\",\n    component: \"BlockText\",\n    filename: \"block-text\",\n    tags: [\"text\", \"image\"],\n    icon: 'vertical_split',\n  },\n  content: {\n    text: {\n      type: 'Textbox',\n      label: 'Block Text',\n      value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      placeholder: 'Write content here...',\n      multiLine: true,\n      lines: 10,\n      autoGrow: 10,\n      allowLinebreaks: true,\n    },\n    bgImage: {\n      type: 'Fieldset',\n      label: 'Background Image',\n      content: {\n        alt: {\n          type: 'Textbox',\n          label: 'Alt Text',\n          placeholder: 'Image alt text',\n        },\n        url: {\n          type: 'Asset',\n          assetTypes: ['image'],\n          label: 'Image',\n        },\n        bg: {\n          type: 'Checkbox',\n          label: 'Use as Background',\n          value: false,\n        }\n      },\n    },\n    options: {\n      type: 'Fieldset',\n      label: 'Options',\n      content: {\n        alignment: {\n          type: 'Select',\n          hint: 'BodyAlignment',\n          label: 'Alignment',\n          value: 'left',\n          options: [\n            { name: 'Align Left', value: 'left', icon: 'align_horizontal_left' },\n            { name: 'Align Right', value: 'right', icon: 'align_horizontal_right' },\n          ],\n          iconFromValue: true,\n        },\n        showProgress: {\n          type: 'Checkbox',\n          label: 'Show Progress Bar',\n          value: true,\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  BlockTextSchema,\n};\n","import { BlockText, BlockTextSchema, BlockTextSchemaProps } from '../src';\n\nwindow.BlockText = BlockText;\nwindow.BlockTextSchema = BlockTextSchema as BlockTextSchemaProps;\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__24__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","BlockText","id","schema","props","Scrowl","window","classes","Markdown","core","editMode","focusElement","contentId","text","content","textFocusCss","bg","bgImage","bgUrl","url","bgLabel","alt","bgFocusCss","bgRef","useRef","bgStyles","backgroundImage","alignmentCss","options","alignment","showProgressBar","showProgress","showProgressRef","slideProgress","progressBarStyles","setProgressBarStyles","useState","width","useEffect","current","Template","className","onProgress","ev","progress","onEnd","style","onMouseDown","host","sendMessage","type","field","ref","BlockTextSchema","meta","version","label","component","filename","tags","icon","placeholder","multiLine","lines","autoGrow","allowLinebreaks","assetTypes","hint","name","iconFromValue"],"sourceRoot":""}