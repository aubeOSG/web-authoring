{"mappings":"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","sources":["packages/templates/block-text/src/prod.ts","packages/templates/block-text/src/index.ts","packages/templates/block-text/src/block-text.types.ts","packages/templates/block-text/src/block-text.tsx","React.js","TemplateCore.js","packages/templates/block-text/src/_index.scss","packages/templates/block-text/src/block-text.schema.ts"],"sourcesContent":["import { BlockText, BlockTextSchema, BlockTextLayout } from './';\n\nwindow.BlockText = BlockText;\nwindow.BlockTextSchema = BlockTextSchema as BlockTextLayout;\n","export * from './block-text.types';\nexport * from './block-text';\nexport * from './block-text.schema';\n","import React from 'react';\nimport {\n  TemplateCommons,\n  InputTextboxProps,\n  InputFieldsetProps,\n  InputSelectProps,\n  InputCheckboxProps,\n  InputAssetProps\n} from '@scrowl/template-core';\n\nexport interface BlockTextContentBgImage extends InputFieldsetProps {\n  fields: {\n    alt: InputTextboxProps;\n    url: InputAssetProps;\n    bg: InputCheckboxProps;\n  };\n}\n\nexport interface BlockTextContentOptions extends InputFieldsetProps {\n  fields: {\n    alignment: InputSelectProps;\n    showProgress: InputCheckboxProps;\n  }\n}\n\nexport type BlockTextLayout = {\n  text: InputTextboxProps;\n  bgImage: BlockTextContentBgImage;\n  options: BlockTextContentOptions;\n};\n\nexport interface BlockTextCommons extends TemplateCommons {\n  layout: BlockTextLayout;\n};\n\nexport type BlockTextProps = BlockTextCommons & React.AllHTMLAttributes<HTMLDivElement>;","import React from 'react';\nimport * as core from '@scrowl/template-core';\nimport * as css from './_index.scss';\nimport { BlockTextProps } from './block-text.types';\n\nexport const BlockText = ({ layout, ...props }: BlockTextProps) => {\n  let classes = `${css.templateBlockText} `;\n  const editMode = props.editMode ? true : false;\n  const focusElement = editMode ? props.focusElement : null;\n  const scrollScenes: any = React.useRef([]);\n  const timeline: any = React.useRef();\n\n  let layoutText = layout.text.value;\n  let useImageAsBG = layout.bgImage.fields.bg.value;\n  let alignment = layout.options.fields.alignment.value;\n  let showProgressBar = layout.options.fields.showProgress.value;\n  const slideDuration = showProgressBar ? 1000 : 0;\n\n  if (showProgressBar) {\n    classes += ' show-progress';\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function getId(id?: String) {\n    if (!id) {\n      return props.id;\n    }\n    return props.id + '-' + id;\n  }\n\n  const handleScrollUpdate = (e: any) => {\n    if (e.stage === 'body') {\n      timeline.current.seek(timeline.current.duration * e.stageProgress);\n    }\n  };\n\n  const handleStateChange = (e: any) => {\n    if (e.state === 'visible') {\n      scrollScenes.current.map((scene: any) => scene.enabled(true));\n    } else {\n      scrollScenes.current.map((scene: any) => scene.enabled(false));\n    }\n  };\n\n  React.useEffect(() => {\n    if (!showProgressBar) {\n      return () => {};\n    }\n\n    scrollScenes.current.push(\n      new core.scroll.Scene({\n        triggerElement: '#' + getId(),\n        duration: slideDuration,\n        offset: 0,\n        triggerHook: 0,\n      })\n        .setPin('#' + getId('pinned-body'), { pushFollowers: false })\n        .addTo(props.controller)\n        .enabled(false)\n    );\n\n    timeline.current = core.anime.timeline({\n      easing: 'easeInOutQuad',\n      autoplay: false,\n    });\n    const currentTimeline = timeline.current;\n    const target = {\n      targets: '#' + getId('bar'),\n      width: '100%',\n      duration: slideDuration,\n    };\n\n    currentTimeline.add(target);\n\n    return () => {\n      scrollScenes.current.forEach((scene) => {\n        scene.destroy(true);\n        props.controller.removeScene(scene);\n      });\n\n      scrollScenes.current = [];\n\n      currentTimeline.children.map((child: any) => {\n        child.remove(target);\n        child.reset();\n        currentTimeline.remove(child);\n      });\n\n      currentTimeline.reset();\n    };\n  }, [showProgressBar]);\n\n  return (\n    <core.Template\n      {...props}\n      className={classes}\n      duration={slideDuration}\n      onStateChange={handleStateChange}\n      onScroll={handleScrollUpdate}\n      ready={true}\n    >\n      <div className=\"slide-container\">\n        <div\n          id={getId('pinned-body')}\n          className=\"hero\"\n          aria-label={useImageAsBG ? layout['bgImage.alt'] : ''}\n          style={\n            useImageAsBG && layout['bgImage.url']\n              ? {\n                  width: '100vw',\n                  height: '100vh',\n                  backgroundImage:\n                    'url(\"./course/assets/' + layout['bgImage.url'] + '\")',\n                }\n              : {}\n          }\n        >\n          {useImageAsBG ? <div className=\"overlay\" /> : null}\n\n          <div className={'text ' + (alignment === 'right' ? ' right' : '')}>\n            <div className=\"wrapper\">\n              <hr\n                id={getId('bar')}\n                style={{ width: showProgressBar ? '0%' : '100%' }}\n              />\n              <p\n                className={\n                  'can-focus ' + (focusElement === 'text' && ' has-focus')\n                }\n                onMouseDown={() => {\n                  if (editMode) {\n                    // Scrowl.focusOnlayout('text');\n                  }\n                }}\n              >\n                <core.Markdown children={layoutText} />\n              </p>\n            </div>\n          </div>\n\n          {useImageAsBG ? null : (\n            <div\n              role=\"img\"\n              aria-label={layout['hero_image.alt']}\n              className={\n                'img ' +\n                (alignment === 'right' ? ' right' : '') +\n                ' can-focus ' +\n                (focusElement === 'bgImage.url' && ' has-focus')\n              }\n              onMouseDown={() => {\n                if (editMode) {\n                  // Scrowl.focusOnlayout('bgImage.url');\n                }\n              }}\n              style={\n                layout['bgImage.url']\n                  ? {\n                      backgroundImage:\n                        'url(\"./course/assets/' + layout['bgImage.url'] + '\")',\n                    }\n                  : {}\n              }\n            />\n          )}\n        </div>\n      </div>\n    </core.Template>\n  );\n};\n\nexport default {\n  BlockText,\n};\n","module.exports=React;","module.exports=TemplateCore;",".template-block-text {\n  .slide-container {\n  }\n\n  .hero {\n    width: 100vw;\n    height: 100vh;\n\n    background-position: 50% 50%;\n    background-size: cover;\n\n    background-color: #fbfbfb;\n\n    .overlay {\n      background-color: rgba(0, 0, 0, 0.1);\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      z-index: 1;\n    }\n\n    .img {\n      height: calc(100vh - 32px);\n      width: calc(45% - 10px - 4rem);\n      background-size: cover;\n      background-position: 50% 50%;\n      top: 16px;\n      right: 16px;\n      position: absolute;\n\n      &.right {\n        left: 16px;\n        right: initial;\n      }\n    }\n\n    .text {\n      margin: 0 5%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      z-index: 5;\n      width: 50%;\n      // min-width: 250px;\n\n      display: flex;\n      flex-flow: column;\n      justify-content: center;\n      height: 100vh;\n\n      font-size: min(3.5vw, 24px);\n\n      font-weight: 400;\n      line-height: min(4.1vw, 3rem);\n      // line-height: 3rem;\n\n      &.right {\n        left: initial;\n        right: 0;\n      }\n\n      .wrapper {\n        background-color: rgba(251, 251, 251, 0.9);\n        padding: 2rem;\n        max-height: calc(100vh - 32px);\n        overflow: hidden;\n\n        hr {\n          width: 0%;\n          border: none;\n          height: 0.4rem;\n          background: var(--bs-body-color);\n          padding: 0;\n          margin: 1rem 0 2rem 0;\n        }\n\n        p {\n          color: var(--bs-body-color);\n          padding: 0;\n          margin: 0;\n          margin: min(3vw, 20px) 0;\n\n          &.header {\n            font-size: min(3.5vw, 26px);\n            font-weight: 600;\n          }\n        }\n      }\n    }\n  }\n\n  &:not(.show-progress) {\n    hr {\n      width: 100% !important;\n    }\n  }\n\n  &.edit-mode {\n    .can-focus {\n      cursor: pointer;\n    }\n\n    .has-focus {\n      background-color: #fff8e6;\n    }\n  }\n}\n","import {\n  TemplateContent,\n  LAYOUT_INPUT_TYPE,\n  MIGRATION_HINT,\n} from '@scrowl/template-core';\n\nexport const BlockTextSchema: TemplateContent = {\n  text: {\n    type: LAYOUT_INPUT_TYPE.Textbox,\n    hint: MIGRATION_HINT.BodyText,\n    label: 'Block Text',\n    value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    placeholder: 'Write content here...',\n    multiLine: true,\n    lines: 10,\n    autoGrow: 10,\n    allowLinebreaks: true,\n  },\n  bgImage: {\n    type: LAYOUT_INPUT_TYPE.Fieldset,\n    label: 'Background Image',\n    fields: {\n      alt: {\n        type: LAYOUT_INPUT_TYPE.Textbox,\n        label: 'Alt Text',\n        placeholder: 'Image alt text',\n      },\n      url: {\n        type: LAYOUT_INPUT_TYPE.Asset,\n        assetType: 'image',\n        label: 'Image',\n      },\n      bg: {\n        type: LAYOUT_INPUT_TYPE.Checkbox,\n        label: 'Use as Background',\n        value: false,\n      }\n    },\n  },\n  options: {\n    type: LAYOUT_INPUT_TYPE.Fieldset,\n    label: 'Options',\n    fields: {\n      alignment: {\n        type: LAYOUT_INPUT_TYPE.Select,\n        hint: MIGRATION_HINT.BodyAlignment,\n        label: 'Alignment',\n        value: 'left',\n        options: [\n          { name: 'Align Left', value: 'left', icon: 'align_horizontal_left' },\n          { name: 'Align Right', value: 'right', icon: 'align_horizontal_right' },\n        ],\n        pre: {\n          width: 26,\n          items: [\n            {\n              type: 'icon',\n              name: 'align_horizontal_left',\n            },\n          ]\n        }\n      },\n      showProgress: {\n        type: LAYOUT_INPUT_TYPE.Checkbox,\n        label: 'Show Progress Bar',\n        value: false,\n      },\n    },\n  },\n};\n\nexport default {\n  BlockTextSchema,\n};\n"],"names":[],"version":3,"file":"scrowl.template-block-text.js.map"}