"use strict";(self.webpackChunk_scrowl_template_lesson_intro=self.webpackChunk_scrowl_template_lesson_intro||[]).push([[422],{560:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LessonIntro)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// @ts-ignore\n\n\nconst LessonIntro = ({ id, schema, ...props }) => {\n    const Scrowl = window['Scrowl'];\n    let classes = 'template-lesson-intro';\n    const editMode = props.editMode ? true : false;\n    const focusElement = editMode ? props.focusElement : null;\n    const contentId = `${id}-lesson-intro`;\n    const title = schema.content.title.value;\n    let titleClasses = 'template-lesson-intro-title can-focus';\n    const subtitle = schema.content.subtitle.value;\n    let subtitleClasses = 'template-lesson-intro-subtitle can-focus';\n    const time = schema.content.time.value;\n    let timeClasses = 'template-lesson-intro-time can-focus';\n    const startLabel = schema.content.startLabel.value;\n    let startLabelClasses = 'template-lesson-intro-start-button can-focus';\n    const bg = schema.content.bgImage.content.bg.value;\n    const bgUrl = schema.content.bgImage.content.url.value;\n    const bgLabel = schema.content.bgImage.content.alt.value || '';\n    let bgClasses = `img__wrapper can-focus ${bg ? 'as-bg' : 'as-hero'}`;\n    const bgRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const bgStyles = {\n        backgroundImage: `url(\"${bgUrl}\")`,\n    };\n    if (focusElement === 'title') {\n        titleClasses += ' has-focus';\n    }\n    switch (focusElement) {\n        case 'title':\n            titleClasses += ' has-focus';\n            break;\n        case 'subtitle':\n            subtitleClasses += ' has-focus';\n            break;\n        case 'time':\n            timeClasses += ' has-focus';\n            break;\n        case 'startLabel':\n            startLabelClasses += ' has-focus';\n            break;\n        case 'bgImage.url':\n            bgClasses += ' has-focus';\n            break;\n        default:\n            console.warn('Unsupported element', focusElement);\n            break;\n    }\n    const handleFocusTitle = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'title',\n            });\n        }\n    };\n    const handleFocusSubtitle = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'subtitle',\n            });\n        }\n    };\n    const handleFocusTime = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'time',\n            });\n        }\n    };\n    const handleFocusStartLabel = (ev) => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'startLabel',\n            });\n        }\n        else {\n            const startCourse = new CustomEvent('startCourse', { detail: ev });\n            document.dispatchEvent(startCourse);\n        }\n    };\n    const handleFocusBg = () => {\n        if (editMode) {\n            Scrowl.core.host.sendMessage({\n                type: 'focus',\n                field: 'bgImage.url',\n            });\n        }\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrowl.core.Template, { id: `slide-${contentId}`, className: classes, notScene: true, style: { overflow: 'hidden' }, ...props },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { id: contentId, className: \"content\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"header\", null,\n                bg && react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"overlay\" }),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h1\", { className: titleClasses, onMouseDown: handleFocusTitle }, title),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", { className: subtitleClasses, onMouseDown: handleFocusSubtitle }, subtitle),\n                time && time.length > 0 && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", { className: timeClasses, onMouseDown: handleFocusTime },\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrowl.ui.Icon, { icon: \"schedule\", display: \"outlined\" }),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", { className: \"template-lesson-intro-time-value\" }, time))),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", { className: startLabelClasses, onMouseDown: handleFocusStartLabel }, startLabel)),\n            (bgUrl || editMode) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { ref: bgRef, className: bgClasses, onMouseDown: handleFocusBg },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", { className: \"img__container\", \"aria-label\": bgLabel, style: bgStyles }))))));\n};\n\n\n\n//# sourceURL=webpack://@scrowl/template-lesson-intro/./src/lesson-intro.tsx?")}}]);