{"version":3,"file":"scrowl.runtime.js","mappings":"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","sources":["webpack://@scrowl/runtime/webpack/universalModuleDefinition","webpack://@scrowl/runtime/webpack/bootstrap","webpack://@scrowl/runtime/webpack/runtime/make namespace object","webpack://@scrowl/runtime/./src/runtime.ts","webpack://@scrowl/runtime/./web/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n  SCORM API REF\n  https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/\n*/\nimport { RUNTIME_SERVICE } from \"./runtime.types\";\n\n// const hasProp = (obj: {}, prop: string) => {\n//   return Object.prototype.hasOwnProperty.call(obj, prop);\n// };\n\nexport const service: RUNTIME_SERVICE = {\n  init: false,\n  finished: false,\n  _time: {\n    startTime: undefined,\n    getSessionTime: () => {\n      let sessionTime;\n      if (service._time.startTime) {\n        sessionTime = new Date().getTime() - service._time.startTime.getTime();\n      }\n      return service._time.convert(sessionTime);\n    },\n    end: undefined,\n    convert: (total) => {\n      function ZeroPad(val: number, pad: number) {\n        let res = new String(val);\n        const len = res.length;\n\n        if (len > pad) {\n          return res.substr(0, pad);\n        }\n\n        for (let i = len; i < pad; i++) {\n          res = '0' + res;\n        }\n\n        return res;\n      }\n\n      let totalMs = total % 1000;\n      let totalS = ((total - totalMs) / 1000) % 60;\n      let totalM = ((total - totalMs - totalS * 1000) / 60000) % 60;\n      let totalH = (total - totalMs - totalS * 1000 - totalM * 60000) / 3600000;\n\n      if (totalH == 10000) {\n        totalH = 9999;\n        totalM = (total - totalH * 3600000) / 60000;\n\n        if (totalM == 100) {\n          totalM = 99;\n        }\n\n        totalM = Math.floor(totalM);\n        totalS = (total - totalH * 3600000 - totalM * 60000) / 1000;\n\n        if (totalS == 100) {\n          totalS = 99;\n        }\n\n        totalS = Math.floor(totalS);\n        totalMs = total - totalH * 3600000 - totalM * 60000 - totalS * 1000;\n      }\n\n      let timespan =\n        ZeroPad(totalH, 4) +\n        ':' +\n        ZeroPad(totalM, 2) +\n        ':' +\n        ZeroPad(totalS, 2);\n\n      if (totalH > 9999) {\n        timespan = '9999:99:99';\n      }\n\n      return timespan;\n    },\n  },\n  nFindAPITries: 0,\n  // @ts-ignore\n  API: null,\n  maxTries: 500,\n  //@ts-ignore\n  scanForAPI: (win) => {\n    while (win.API_1484_11 == null && win.parent != null && win.parent != win) {\n      service.nFindAPITries++;\n\n      if (service.nFindAPITries > service.maxTries) {\n        return null;\n      }\n\n      win = win.parent;\n    }\n\n    return win.API_1484_11;\n  },\n  getAPI: (win) => {\n    if (win.parent != null && win.parent != win) {\n      // @ts-ignore\n      service.API = service.scanForAPI(win.parent);\n    }\n\n    if (service.API == null && win.opener != null) {\n      // @ts-ignore\n      service.API = service.scanForAPI(win.opener);\n    }\n  },\n  getError: (printError) => {\n    printError =\n      printError === undefined || printError === null ? true : printError;\n    const res = service.isAvailable();\n\n    if (res.error) {\n      return res;\n    }\n\n    const errorId = res.API.GetLastError();\n    const errorMsg = res.API.GetErrorString(errorId);\n    const errorStack = res.API.GetDiagnostic(errorId);\n    const apiError = {\n      id: errorId,\n      message: errorMsg,\n      stack: errorStack,\n    };\n\n    if (printError) {\n      console.error(`Error:\\n${JSON.stringify(apiError, null, 2)}`);\n    }\n\n    return {\n      error: false,\n      data: apiError,\n    };\n  },\n  commit: () => {\n    console.debug(`API.Commit`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true];\n    }\n\n    service.setValue('cmi.session_time', service._time.getSessionTime());\n    API.Commit('');\n    return [false];\n  },\n  exit: () => {\n    console.debug('API.Exit');\n    return service.commit();\n  },\n  isInitialized: () => {\n    console.debug('API.Initialize()');\n    service.init = false;\n\n    if (!service.API) {\n      console.error('MISSING_SCORM_API - INIT');\n      return [service.init, false];\n    }\n\n    // @ts-ignore\n    if (service.API.Initialized === 'false') {\n      console.error('API failed to initialize');\n      return [service.init, false];\n    }\n\n    service.init = true;\n    return [service.init, service.API];\n  },\n  // { m: 1, l: 1, s?: 3 }\n  updateLocation: (location, slideId) => {\n    console.log(`API.UpdateLocation`);\n    console.log(location);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true];\n    }\n\n    service.setValue(\n      'cmi.location',\n      JSON.stringify({ v1: 1, ...location, slideId: slideId })\n    );\n\n    service.commit();\n    return [false];\n  },\n  getLocation: () => {\n    console.debug(`API.GetLocation`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true, {}];\n    }\n    // {m:1, l:1, s?:3} || {} || null\n    try {\n      const [error, location] = service.getValue('cmi.location');\n\n      if (error || !location) {\n        return [true, {}];\n      }\n\n      return [false, JSON.parse(location)];\n    } catch (e) {\n      console.error(e);\n      return [true, {}];\n    }\n  },\n  getProgress: () => {\n    console.debug(`API.GetProgress`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get progress: service not initialized`);\n      return [true, {}];\n    }\n\n    try {\n      const [error, progress] = service.getValue('cmi.progress_measure');\n\n      if (error || !progress) {\n        return [true, {}];\n      }\n\n      return [false, progress];\n    } catch (e) {\n      console.error(e);\n      return [true, {}];\n    }\n  },\n  updateProgress: (progressPercentage) => {\n    console.log(`API.UpdateProgress`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to update progress: service not initialized`);\n      return [true];\n    }\n\n    const [progressError, previousProgress] = service.getValue(\n      'cmi.progress_measure'\n    );\n\n    if (!progressError) {\n      if (\n        !previousProgress ||\n        parseFloat(previousProgress) === 0 ||\n        progressPercentage > parseFloat(previousProgress)\n      ) {\n        service.setValue('cmi.progress_measure', progressPercentage);\n      }\n      service.commit();\n    }\n\n    return [false];\n  },\n  start: () => {\n    console.debug(`API.Start`);\n    service._time.startTime = new Date();\n    service.getAPI(window);\n\n    service.API?.Initialize('');\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      return [true];\n    }\n\n    const [statusError, completionStatus] = service.getValue(\n      'cmi.completion_status'\n    );\n\n    if (statusError) {\n      return [true];\n    }\n\n    if (completionStatus === 'unknown') {\n      service.setValue('cmi.completion_status', 'incomplete');\n      service.setValue('cmi.success_status', 'unknown');\n      service.setValue('cmi.suspend_data', '{}');\n    } else {\n      service.setValue(\n        'cmi.score.scaled',\n        service.getValue('cmi.score.scaled')[1]\n      );\n      service.setValue('cmi.score.raw', service.getValue('cmi.score.raw')[1]);\n      service.setValue(\n        'cmi.success_status',\n        service.getValue('cmi.success_status')[1]\n      );\n      service.setValue(\n        'cmi.progress_measure',\n        service.getValue('cmi.progress_measure')[1]\n      );\n      service.setValue(\n        'cmi.completion_status',\n        service.getValue('cmi.completion_status')[1]\n      );\n    }\n\n    // until we have things hooked up to exit buttons/nav, set exit to 'suspend' as part of start() so that status persists whether the user finishes or exits\n    service.setValue('cmi.exit', 'suspend');\n    service.commit();\n\n    console.log('runtime started');\n\n    return [false];\n  },\n  finish: () => {\n    console.debug(`API.Finish`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to finish: service not initialized`);\n      return [true];\n    }\n\n    service.setValue('cmi.score.min', 0);\n    service.setValue('cmi.score.max', 100);\n    service.setValue('cmi.score.scaled', 1);\n    service.setValue('cmi.score.raw', 100);\n    service.setValue('cmi.success_status', 'passed');\n    service.setValue('cmi.progress_measure', 1);\n    service.setValue('cmi.completion_status', 'completed');\n    service.commit();\n    API.Terminate('');\n\n    return [false];\n  },\n  setValue: (elem, val) => {\n    console.debug(`API.SetValue for ${elem} to ${val}`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to set value for ${elem}: service not initialized`);\n      return [true];\n    }\n\n    if (val !== undefined) {\n      API.SetValue(elem, val);\n    } else {\n      console.warn(`Unable to set value for ${elem}: value undefined`);\n    }\n\n    // if (service.API.SetValue(elem, val) === 'false') {\n    //   throw {\n    //     message: `SCORM service failed to set ${elem} to ${val}`,\n    //     data: service.getError(true),\n    //   };\n    // }\n\n    return [false];\n  },\n  getValue: (elem) => {\n    console.debug(`API.GetValue for ${elem}`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to set value for ${elem}: service not initialized`);\n      return [true, ''];\n    }\n\n    const getRes = API.GetValue(elem);\n\n    if (getRes === 'false') {\n      console.error(`API failed to get value for: ${elem}`);\n      return [true, ''];\n    }\n\n    return [false, getRes];\n  },\n};\n\nexport default {\n  service,\n}\n","import { service } from '../src';\n\nwindow.Scrowl = window.Scrowl || {};\nwindow.Scrowl.runtime = service;\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","service","init","finished","_time","startTime","undefined","getSessionTime","sessionTime","Date","getTime","convert","end","total","ZeroPad","val","pad","res","String","len","length","substr","totalMs","totalS","totalM","totalH","Math","floor","timespan","nFindAPITries","API","maxTries","scanForAPI","win","API_1484_11","parent","getAPI","opener","getError","printError","isAvailable","error","errorId","GetLastError","apiError","id","message","GetErrorString","stack","GetDiagnostic","console","JSON","stringify","data","commit","debug","isInit","isInitialized","setValue","Commit","warn","exit","Initialized","updateLocation","location","slideId","log","v1","getLocation","getValue","parse","e","getProgress","progress","updateProgress","progressPercentage","progressError","previousProgress","parseFloat","start","window","Initialize","statusError","completionStatus","finish","Terminate","elem","SetValue","getRes","GetValue","Scrowl","runtime"],"sourceRoot":""}