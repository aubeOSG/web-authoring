{"version":3,"file":"scrowl.player.js","mappings":"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","sources":["webpack://@scrowl/player/webpack/universalModuleDefinition","webpack://@scrowl/player/../../node_modules/classnames/index.js","webpack://@scrowl/player/../../node_modules/invariant/browser.js","webpack://@scrowl/player/../../node_modules/prop-types-extra/lib/all.js","webpack://@scrowl/player/../../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","webpack://@scrowl/player/../../node_modules/prop-types/factoryWithThrowingShims.js","webpack://@scrowl/player/../../node_modules/prop-types/index.js","webpack://@scrowl/player/../../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://@scrowl/player/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://@scrowl/player/../../node_modules/react/jsx-runtime.js","webpack://@scrowl/player/external umd \"React\"","webpack://@scrowl/player/external umd \"ReactDOM\"","webpack://@scrowl/player/external umd {\"root\":\"Scrowl\",\"commonjs\":\"@scrowl/ui\",\"commonjs2\":\"@scrowl/ui\"}","webpack://@scrowl/player/webpack/bootstrap","webpack://@scrowl/player/webpack/runtime/compat get default export","webpack://@scrowl/player/webpack/runtime/define property getters","webpack://@scrowl/player/webpack/runtime/global","webpack://@scrowl/player/webpack/runtime/hasOwnProperty shorthand","webpack://@scrowl/player/webpack/runtime/make namespace object","webpack://@scrowl/player/./src/components/error/error.tsx","webpack://@scrowl/player/./src/utils/index.ts","webpack://@scrowl/player/./src/utils/css.ts","webpack://@scrowl/player/./src/components/pane/_pane.scss?5415","webpack://@scrowl/player/./src/components/pane/pane.tsx","webpack://@scrowl/player/./src/components/slide/slide.tsx","webpack://@scrowl/player/../../node_modules/@remix-run/router/dist/router.js","webpack://@scrowl/player/../../node_modules/react-router/dist/index.js","webpack://@scrowl/player/./src/root/config.ts","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ThemeProvider.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/canUseDOM.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/addEventListener.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/ownerDocument.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/removeEventListener.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/scrollbarSize.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useCommittedRef.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useEventCallback.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useMergedRefs.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useWillUnmount.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useUpdatedRef.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/getComputedStyle.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/ownerWindow.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/hyphenate.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/hyphenateStyle.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/isTransform.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/css.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/listen.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/transitionEnd.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/triggerEvent.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/activeElement.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/contains.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/DataKey.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/ModalManager.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/getScrollbarWidth.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/useWindow.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/useWaitForDOMRef.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/NoopTransition.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/ImperativeTransition.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/Modal.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useMounted.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/usePrevious.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/utils.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/querySelectorAll.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/removeClass.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/BootstrapModalManager.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/addClass.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/hasClass.js","webpack://@scrowl/player/../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@scrowl/player/../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@scrowl/player/../../node_modules/react-transition-group/esm/config.js","webpack://@scrowl/player/../../node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://@scrowl/player/../../node_modules/react-transition-group/esm/utils/reflow.js","webpack://@scrowl/player/../../node_modules/react-transition-group/esm/Transition.js","webpack://@scrowl/player/../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/transitionEndListener.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/TransitionWrapper.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/safeFindDOMNode.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Fade.js","webpack://@scrowl/player/../../node_modules/dom-helpers/esm/camelize.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalBody.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalContext.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalDialog.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalFooter.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/CloseButton.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/AbstractModalHeader.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalHeader.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/divWithClassName.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ModalTitle.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Modal.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useCallbackRef.js","webpack://@scrowl/player/./src/components/modal/_modal.scss?2280","webpack://@scrowl/player/./src/components/modal/modal.tsx","webpack://@scrowl/player/./src/components/preview/_preview.scss?a9c4","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/Button.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Button.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useMediaQuery.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useBreakpoint.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/OffcanvasBody.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/OffcanvasToggling.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavbarContext.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/OffcanvasHeader.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/OffcanvasTitle.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Offcanvas.js","webpack://@scrowl/player/./src/utils/formatResponse.ts","webpack://@scrowl/player/./src/components/preview/preview.tsx","webpack://@scrowl/player/../../node_modules/react-router-dom/dist/index.js","webpack://@scrowl/player/./src/root/_root.scss?33d9","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/SelectableContext.js","webpack://@scrowl/player/../../node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@scrowl/player/../../node_modules/uncontrollable/lib/esm/utils.js","webpack://@scrowl/player/../../node_modules/uncontrollable/lib/esm/hook.js","webpack://@scrowl/player/../../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavbarBrand.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/createChainedFunction.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Collapse.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavbarCollapse.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavbarToggle.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Navbar.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Container.js","webpack://@scrowl/player/../../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","webpack://@scrowl/player/../../node_modules/@react-aria/ssr/dist/import.mjs","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/TabContext.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/TabPanel.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/Tabs.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/NavContext.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/NavItem.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/Nav.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useForceUpdate.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavItem.js","webpack://@scrowl/player/../../node_modules/@restart/hooks/esm/useResizeObserver.js","webpack://@scrowl/player/../../node_modules/@restart/ui/esm/Anchor.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/NavLink.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Nav.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/TabContent.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/getTabTransitionComponent.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/TabPane.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/ElementChildren.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Tabs.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/TabContainer.js","webpack://@scrowl/player/../../node_modules/react-bootstrap/esm/Tab.js","webpack://@scrowl/player/./src/components/navbar/_navbar.scss?fa95","webpack://@scrowl/player/./src/components/navbar/nav-module.tsx","webpack://@scrowl/player/./src/components/navbar/nav-resource.tsx","webpack://@scrowl/player/./src/components/navbar/search-bar.tsx","webpack://@scrowl/player/../../node_modules/react-keywords/esm/index.js","webpack://@scrowl/player/./src/components/navbar/nav-glossary.tsx","webpack://@scrowl/player/./src/components/navbar/navbar.tsx","webpack://@scrowl/player/./src/services/pages/page.tsx","webpack://@scrowl/player/./src/services/pages/pages.tsx","webpack://@scrowl/player/./src/services/index.ts","webpack://@scrowl/player/./src/components/scrollHint/_scrollHint.scss?1889","webpack://@scrowl/player/./src/components/scrollHint/scrollHint.tsx","webpack://@scrowl/player/./src/root/root.tsx","webpack://@scrowl/player/./src/index.ts","webpack://@scrowl/player/./web/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"ReactDOM\"), require(\"@scrowl/ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"ReactDOM\", ], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\"), require(\"ReactDOM\"), require(\"@scrowl/ui\")) : factory(root[\"React\"], root[\"ReactDOM\"], root[\"Scrowl\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__24__, __WEBPACK_EXTERNAL_MODULE__314__, __WEBPACK_EXTERNAL_MODULE__130__) => {\nreturn ","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__24__;","module.exports = __WEBPACK_EXTERNAL_MODULE__314__;","module.exports = __WEBPACK_EXTERNAL_MODULE__130__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react';\nimport { ErrorProps } from './error.types';\n\nexport const Error = ({ msg, ...props }: ErrorProps) => {\n  return (\n    <div {...props}>\n      <h1>Error</h1>\n      <p>{msg}</p>\n    </div>\n  );\n};\n\nexport default {\n  Error,\n};\n","import _css from './css';\n\nexport * from './utils.types';\nexport const css = _css;\n\nexport default {\n  css,\n};\n","import { CssMapProps } from './utils.types';\n\nexport const removeMapPrefix = (cssMap: CssMapProps) => {\n  const formattedMap: CssMapProps = {};\n  const keys = Object.keys(cssMap);\n  let key = '';\n  \n  for (let i = 0, ii = keys.length; i < ii; i++) {\n    key = keys[i].replace('owlui', '').replace(/^-/g, '').replace(/^[A-Z]/g, (letter) => {\n      return letter.toLocaleLowerCase();\n    });\n\n    formattedMap[key] = cssMap[keys[i]];\n  }\n\n  return formattedMap;\n};\n\nexport default {\n  removeMapPrefix,\n};\n","// extracted by mini-css-extract-plugin\nexport var owluiOwluiNavTabs = \"owlui-owlui-nav-tabs\";\nexport var owluiOwluiTabPane = \"owlui-owlui-tab-pane\";\nexport var owluiPane = \"owlui-pane\";\nexport var owluiPaneHeading = \"owlui-pane__heading\";\nexport var owluiPaneLeft = \"owlui-pane--left\";\nexport var owluiPaneLeftContent = \"owlui-pane--left__content\";\nexport var owluiPaneLeftHeader = \"owlui-pane--left__header\";\nexport var owluiPaneRight = \"owlui-pane--right\";\nexport var owluiPaneRightContent = \"owlui-pane--right__content\";\nexport var owluiPaneRightHeader = \"owlui-pane--right__header\";","import React from 'react';\nimport { PaneProps } from './pane.types';\nimport utils from '../../utils';\nimport * as _css from './_pane.scss';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const Pane = ({ children, className, side }: PaneProps) => {\n  let paneStyles = `${css.pane}`;\n\n  if (className) {\n    paneStyles += className;\n  }\n\n  switch (side) {\n    default:\n      paneStyles += ` ${css.paneLeft}`;\n      break;\n  }\n\n  return <div className={paneStyles}>{children}</div>;\n};\n\nexport default {\n  Pane,\n};\n","import React from 'react';\nimport { SlideProps } from './slide.types';\n\nexport const Slide = ({\n  children,\n  className,\n  options,\n  ...props\n}: SlideProps) => {\n  let classes = '';\n\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  return (\n    <div className={classes} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Slide,\n};\n","/**\n * @remix-run/router v1.6.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref,\n\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    createURL,\n\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (manifest === void 0) {\n    manifest = {};\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n\n  routes.forEach((route, index) => {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\n\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`\n\n  let isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\"))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push(...restExploded);\n  } // for absolute paths, ensure `/` instead of empty segment\n\n\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  let path = originalPath;\n\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  } // ensure `/` is added at the beginning if the path is absolute\n\n\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1; // only apply the splat if it's the last segment\n\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      const starParam = params[star]; // Apply the splat\n\n      return starParam;\n    }\n\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n\n      if (optional === \"?\") {\n        return param == null ? \"\" : param;\n      }\n\n      if (param == null) {\n        invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n      }\n\n      return param;\n    } // Remove any optional markers from optional static segments\n\n\n    return segment.replace(/\\?$/g, \"\");\n  }) // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\n\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n}); //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  } // Routes keyed by ID\n\n\n  let manifest = {}; // Routes in tree format for matching\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\"; // Config driven behavior flags\n\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future); // Cleanup function for history\n\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && ( // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n\n        });\n        return;\n      }\n\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    } // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n\n\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          }); // Send the same navigation through\n\n          navigate(to, opts);\n        },\n\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change and not a mutation submission.\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n\n\n    if (state.initialized && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation; // Create a GET request for the loaders\n\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace;\n\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n\n      loadingNavigation = navigation;\n    } // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n\n\n    let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    }); // Proxy navigation abort through to revalidation fetchers\n\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    ); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename); // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(state, redirect, _temp) {\n    var _window;\n\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an absolute external redirect that goes to a new origin\n\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\") {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n\n        return;\n      }\n    } // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    } // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n\n\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  } // Utility function to update blockers, ensuring valid state transitions\n\n\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n\n    if (blockerFunctions.size === 0) {\n      return;\n    } // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n\n\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n\n    if (isResponse(result)) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n\n\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext, match);\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      var _result$activeDeferre;\n\n      let data = Object.values(result.loaderData)[0];\n\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    } // Create a GET request for the loaders\n\n\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy); // Short circuit if we have no loaders to run (query())\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Process and commit output from loaders\n\n\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n}\n\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n\n    for (let match of matches) {\n      contextualMatches.push(match);\n\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  } // Resolve the relative path\n\n\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\"); // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  } // Add an ?index param for matched index routes if we don't already have one\n\n\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n\n\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\n\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  let submission;\n\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData); // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location); // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename); // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n      return;\n    } // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n\n\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired\n    }));\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\n\n\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy(); // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\"); // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n\n  let routeUpdates = {};\n\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  } // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n\n\n  Object.assign(routeToUpdate, routeUpdates); // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result;\n  let onReject;\n\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n\n    onReject = () => reject();\n\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status; // Process redirects\n\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\"); // Support relative routing in internal redirects\n\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      } // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\n\n\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission; // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  for (let match of matches) {\n    let id = match.route.id;\n\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\n\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  } // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n\n\n  return false;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\n\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\n\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\n\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\n\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index]; // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.11.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext); // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n\n  if (matches == null) {\n    var _dataRouterState;\n\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\n\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n\n  return updates;\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","import {\n  ProjectSlide,\n  ProjectLesson,\n  ProjectModule,\n  PlayerRootConfig,\n} from './root.types';\n\nexport const create = (\n  slides: Array<ProjectSlide>,\n  lessons: Array<ProjectLesson>,\n  modules: Array<ProjectModule>,\n  resources,\n  glossary,\n  name,\n  subtitle\n) => {\n  const rootConfig: Array<PlayerRootConfig> = [];\n\n  while (modules.length > 0) {\n    const module = modules.shift();\n\n    if (!module) {\n      break;\n    }\n\n    const config: PlayerRootConfig = {\n      module: module,\n      lessons: [],\n    };\n    const lCnt = lessons.length;\n    let l = 0;\n\n    while (lessons.length > 0 && l < lCnt) {\n      l++;\n\n      if (lessons[0].moduleId !== module.id) {\n        continue;\n      }\n\n      const lesson = lessons.shift();\n\n      if (!lesson) {\n        break;\n      }\n\n      const configSlides: Array<ProjectSlide> = [];\n      const sCnt = slides.length;\n      let s = 0;\n\n      while (slides.length > 0 && s < sCnt) {\n        s++;\n\n        if (\n          slides[0].moduleId !== module.id ||\n          slides[0].lessonId !== lesson.id\n        ) {\n          continue;\n        }\n\n        const slide = slides.shift();\n\n        if (!slide) {\n          break;\n        }\n\n        configSlides.push(slide);\n      }\n\n      config.lessons.push({\n        lesson,\n        slides: configSlides,\n      });\n    }\n\n    rootConfig.push(config);\n  }\n\n  const projectConfig = {\n    name: name,\n    subtitle: subtitle,\n    outlineConfig: rootConfig,\n    resources: resources,\n    glossary: glossary,\n  };\n\n  return projectConfig;\n};\n\nexport default {\n  create,\n};\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) => children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","// extracted by mini-css-extract-plugin\nexport var owluiCloseButton = \"owlui-close-button\";\nexport var owluiDarkBackground = \"owlui-dark-background\";\nexport var owluiFooter = \"owlui-footer\";\nexport var owluiModalContainer = \"owlui-modal-container\";\nexport var owluiModalHeader = \"owlui-modal-header\";","import React, { useEffect, useState } from 'react';\nimport { Modal, ThemeProvider } from 'react-bootstrap';\nimport { ui } from '@scrowl/ui';\n\nimport * as _css from './_modal.scss';\nimport utils, { CssMapProps } from '../../utils';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const ErrorModal = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalErrorId, setModalErrorId] = useState('');\n  const [modalError, setModalError] = useState('');\n  const [modalErrorStack, setModalErrorStack] = useState('');\n\n  const themePrefixes: CssMapProps = {};\n\n  // below is not working: see _modal.scss for actual styling\n  themePrefixes['modal-open'] = 'owlui-modal-open';\n  themePrefixes['modal-modal-backdrop'] = 'owlui-modal-backdrop';\n  themePrefixes['modal-fade'] = 'owlui-fade';\n  themePrefixes['modal-dialog-centered'] = 'owlui-dialog-centered';\n\n  themePrefixes['modal-dialog'] = 'owlui-modal-dialog';\n  themePrefixes['modal-body'] = 'owlui-modal-body';\n  themePrefixes['modal-header'] = 'owlui-modal-header';\n  themePrefixes['modal-content'] = 'owlui-modal-content';\n  themePrefixes['modal-title'] = 'owlui-modal-title';\n\n  const toggleModal = () => {\n    // should reset the error state when closing\n    setModalErrorId('');\n    setModalError('');\n    setModalErrorStack('');\n\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    if (showModal) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    const handleCatchError = (ev) => {\n      const errorEvent = ev.detail;\n      setModalErrorId('500');\n      setModalError(errorEvent.message);\n      setModalErrorStack(errorEvent.stack.substring(0, 350));\n\n      setShowModal(true);\n    };\n\n    const handleCatchScormError = (ev) => {\n      const errorEvent = ev.detail;\n\n      // SCORM 2004 gives error 403 when getValue tries to read a value that has not been set, while SCORM 1.2 does not consider this an error, so the error code returned by GetLastError() is 0. Do not display the modal for these errors\n      if (\n        errorEvent.id !== 0 &&\n        errorEvent.id !== '0' &&\n        errorEvent.id !== '403'\n      ) {\n        setModalErrorId(errorEvent.id);\n        setModalError(errorEvent.message);\n        setModalErrorStack(errorEvent.stack);\n\n        setShowModal(true);\n      }\n    };\n\n    document.addEventListener('scormError', handleCatchScormError);\n    document.addEventListener('playerError', handleCatchError);\n  }, [showModal]);\n\n  useEffect(() => {\n    const handleConnectionError = (errorObject) => {\n      setModalErrorId(errorObject.detail.id);\n      setModalError(errorObject.detail.message);\n      setModalErrorStack(errorObject.detail.stack);\n\n      setShowModal(true);\n    };\n    document.addEventListener('APIError', handleConnectionError);\n    document.addEventListener('connectionError', handleConnectionError);\n  }, []);\n\n  if (showModal) {\n    return (\n      <ThemeProvider prefixes={themePrefixes}>\n        <div className={css.darkBackground} onClick={toggleModal} />\n        <div className={css.modalContainer}>\n          <Modal.Dialog className={css.modalDialog}>\n            <Modal.Header>\n              <h1>Error</h1>\n              <span className={css.closeButton} onClick={toggleModal}>\n                <ui.Icon display=\"sharp\" icon=\"close\" />\n              </span>\n            </Modal.Header>\n            <Modal.Body>\n              <h5>Error: {modalError}</h5>\n              <p>Error ID: {modalErrorId}</p>\n              <p>Error Description: {modalErrorStack}</p>\n            </Modal.Body>\n            <Modal.Footer className={css.footer}>\n              <ui.Button onClick={toggleModal}>Cancel</ui.Button>\n\n              <ui.Button onClick={toggleModal}>Submit</ui.Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        </div>\n      </ThemeProvider>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default {\n  ErrorModal,\n};\n","// extracted by mini-css-extract-plugin\nexport var owluiPreviewButton = \"owlui-preview-button\";\nexport var owluiPreviewPanel = \"owlui-preview-panel\";","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nvar matchersByWindow = new WeakMap();\n\nvar getMatcher = function getMatcher(query, targetWindow) {\n  if (!query || !targetWindow) return undefined;\n  var matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  var mql = matchers.get(query);\n\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\n\n\nexport default function useMediaQuery(query, targetWindow) {\n  if (targetWindow === void 0) {\n    targetWindow = typeof window === 'undefined' ? undefined : window;\n  }\n\n  var mql = getMatcher(query, targetWindow);\n\n  var _useState = useState(function () {\n    return mql ? mql.matches : false;\n  }),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect(function () {\n    var mql = getMatcher(query, targetWindow);\n\n    if (!mql) {\n      return setMatches(false);\n    }\n\n    var matchers = matchersByWindow.get(targetWindow);\n\n    var handleChange = function handleChange() {\n      setMatches(mql.matches);\n    };\n\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return function () {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  var names = Object.keys(breakpointValues);\n\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n\n    return query ? query + \" and \" + next : next;\n  }\n\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n\n  function getMaxQuery(breakpoint) {\n    var next = getNext(breakpoint);\n    var value = breakpointValues[next];\n    if (typeof value === 'number') value = value - 0.2 + \"px\";else value = \"calc(\" + value + \" - 0.2px)\";\n    return \"(max-width: \" + value + \")\";\n  }\n\n  function getMinQuery(breakpoint) {\n    var value = breakpointValues[breakpoint];\n\n    if (typeof value === 'number') {\n      value = value + \"px\";\n    }\n\n    return \"(min-width: \" + value + \")\";\n  }\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    var breakpointMap;\n\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      var _breakpointMap;\n\n      direction = direction || true;\n      breakpointMap = (_breakpointMap = {}, _breakpointMap[breakpointOrMap] = direction, _breakpointMap);\n    }\n\n    var query = useMemo(function () {\n      return Object.entries(breakpointMap).reduce(function (query, _ref) {\n        var key = _ref[0],\n            direction = _ref[1];\n\n        if (direction === 'up' || direction === true) {\n          query = and(query, getMinQuery(key));\n        }\n\n        if (direction === 'down' || direction === true) {\n          query = and(query, getMaxQuery(key));\n        }\n\n        return query;\n      }, '');\n    }, [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n\n  return useBreakpoint;\n}\nvar useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","import classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","export const formatResponse = (response: any) => {\n  const {\n    location,\n    completion_status,\n    completion_threshold,\n    credit,\n    entry,\n    launch_data,\n    learner_id,\n    learner_name,\n    max_time_allowed,\n    mode,\n    progress_measure,\n    scaled_passing_score,\n    success_status,\n    suspend_data,\n    time_limit_action,\n    total_time,\n    ...rest\n  } = response;\n  let parsedLocation;\n\n  if (location) {\n    parsedLocation = JSON.parse(location);\n  }\n\n  rest['location'] = parsedLocation;\n  rest['completion_status'] = completion_status;\n  rest['completion_threshold'] = completion_threshold;\n  rest['credit'] = credit;\n  rest['entry'] = entry;\n  rest['launch_data'] = launch_data;\n  rest['learner_id'] = learner_id;\n  rest['learner_name'] = learner_name;\n  rest['max_time_allowed'] = max_time_allowed;\n  rest['mode'] = mode;\n  rest['progress_measure'] = progress_measure;\n  rest['scaled_passing_score'] = scaled_passing_score;\n  rest['success_status'] = success_status;\n  rest['suspend_data'] = suspend_data;\n  rest['time_limit_action'] = time_limit_action;\n  rest['total_time'] = total_time;\n\n  return JSON.stringify(rest, null, 2);\n};\n\nexport default {\n  formatResponse,\n};\n","import React, { useEffect, useState } from 'react';\nimport utils, { CssMapProps } from '../../utils';\nimport * as _css from './_preview.scss';\n// @ts-ignore\nimport { ThemeProvider, Offcanvas, Button } from 'react-bootstrap';\nimport { formatResponse } from '../../utils/formatResponse';\n\nexport const Preview = () => {\n  const css = utils.css.removeMapPrefix(_css);\n  const themePrefixes: CssMapProps = {};\n  const [show, setShow] = useState(true);\n\n  themePrefixes['offcanvas'] = `owlui-offcanvas`;\n  themePrefixes['offcanvas-body'] = `owlui-offcanvas-body`;\n  themePrefixes['offcanvas-header'] = `owlui-offcanvas-header`;\n  themePrefixes['offcanvas-title'] = `owlui-offcanvas-title`;\n  themePrefixes['btn'] = `owlui-btn`;\n  themePrefixes['btn-close'] = `owlui-btn-close`;\n  themePrefixes['btn-close-white'] = `owlui-btn-close-white`;\n\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  useEffect(() => {\n    if (window['API_1484_11']) {\n      const value = window['API_1484_11'].GetValue('cmi');\n      let p;\n      setTimeout(() => {\n        p = document.querySelector('#scorm-preview-content');\n        if (p) {\n          p.textContent = formatResponse(value);\n        }\n      }, 1);\n    }\n  }, [show]);\n\n  return (\n    <ThemeProvider prefixes={themePrefixes}>\n      <Button className={css.previewButton} onClick={handleShow} variant=\"dark\">\n        SCORM Preview\n      </Button>\n      <Offcanvas\n        show={show}\n        className={css.previewPanel}\n        placement=\"end\"\n        backdrop={false}\n        scroll={true}\n        onHide={handleClose}\n      >\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>\n            <h3>SCORM Preview</h3>\n          </Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <pre>window.API_1484_11.cmi = &#123;</pre>\n          <pre>\"cmi\":</pre>\n          <pre id=\"scorm-preview-content\"></pre>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </ThemeProvider>\n  );\n};\n\nexport default {\n  Preview,\n};\n","/**\n * React Router DOM v6.11.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, options, basename) {\n  let method;\n  let action = null;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative,\n    preventScrollReset\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      action,\n      method,\n      encType,\n      formData\n    } = getFormSubmissionInfo(target, options, basename); // Base options shared between fetch() and navigate()\n\n    let opts = {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, fetcherRouteId, action, opts);\n    } else {\n      router.navigate(action, _extends({}, opts, {\n        replace: options.replace,\n        fromRouteId: currentRouteId\n      }));\n    }\n  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","// extracted by mini-css-extract-plugin\nexport var owluiLesson = \"owlui-lesson\";\nexport var owluiLessonWrapper = \"owlui-lesson-wrapper\";\nexport var owluiNavbar = \"owlui-navbar\";\nexport var owluiNavbarLight = \"owlui-navbar-light\";\nexport var owluiNextLessonContainer = \"owlui-next-lesson-container\";\nexport var scrowlPlayer = \"scrowl-player\";","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","import * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null ? void 0 : onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((value, ...args) => {\n    if (handler) handler(value, ...args);\n    setState(value);\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","import $89yE2$react, {useContext as $89yE2$useContext, useState as $89yE2$useState, useMemo as $89yE2$useMemo, useLayoutEffect as $89yE2$useLayoutEffect, useRef as $89yE2$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $704cf1d3b684cc5c$var$defaultContext = {\n    prefix: String(Math.round(Math.random() * 10000000000)),\n    current: 0,\n    isSSR: false\n};\nconst $704cf1d3b684cc5c$var$SSRContext = /*#__PURE__*/ (0, $89yE2$react).createContext($704cf1d3b684cc5c$var$defaultContext);\nfunction $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    let counter = $704cf1d3b684cc5c$var$useCounter(cur === $704cf1d3b684cc5c$var$defaultContext);\n    let [isSSR, setIsSSR] = (0, $89yE2$useState)(true);\n    let value = (0, $89yE2$useMemo)(()=>({\n            // If this is the first SSRProvider, start with an empty string prefix, otherwise\n            // append and increment the counter.\n            prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? \"\" : `${cur.prefix}-${counter}`,\n            current: 0,\n            isSSR: isSSR\n        }), [\n        cur,\n        counter,\n        isSSR\n    ]);\n    // If on the client, and the component was initially server rendered,\n    // then schedule a layout effect to update the component after hydration.\n    if (typeof window !== \"undefined\") // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    (0, $89yE2$useLayoutEffect)(()=>{\n        setIsSSR(false);\n    }, []);\n    return /*#__PURE__*/ (0, $89yE2$react).createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {\n        value: value\n    }, props.children);\n}\nlet $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== \"undefined\" && window.document && window.document.createElement);\nlet $704cf1d3b684cc5c$var$componentIds = new WeakMap();\nfunction $704cf1d3b684cc5c$var$useCounter(isDisabled = false) {\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    let ref = (0, $89yE2$useRef)(null);\n    if (ref.current === null && !isDisabled) {\n        var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;\n        // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n        // This means our id counter will be incremented twice instead of once. This is a problem because on the\n        // server, components are only rendered once and so ids generated on the server won't match the client.\n        // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n        // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n        // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n        // To ensure that we only increment the global counter once, we store the starting id for this component in\n        // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n        // Since React runs the second render immediately after the first, this is safe.\n        // @ts-ignore\n        let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, $89yE2$react).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;\n        if (currentOwner) {\n            let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);\n            if (prevComponentValue == null) // On the first render, and first call to useId, store the id and state in our weak map.\n            $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {\n                id: ctx.current,\n                state: currentOwner.memoizedState\n            });\n            else if (currentOwner.memoizedState !== prevComponentValue.state) {\n                // On the second render, the memoizedState gets reset by React.\n                // Reset the counter, and remove from the weak map so we don't\n                // do this for subsequent useId calls.\n                ctx.current = prevComponentValue.id;\n                $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);\n            }\n        }\n        ref.current = ++ctx.current;\n    }\n    return ref.current;\n}\nfunction $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n    // provide a warning to hint to the developer to add one.\n    if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM) console.warn(\"When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\");\n    let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);\n    return defaultId || `react-aria${ctx.prefix}-${counter}`;\n}\nfunction $704cf1d3b684cc5c$export$535bd6ca7f90a273() {\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    return cur.isSSR;\n}\n\n\n\n\nexport {$704cf1d3b684cc5c$export$9f8ac96af4b1b2ae as SSRProvider, $704cf1d3b684cc5c$export$619500959fc48b26 as useSSRSafeId, $704cf1d3b684cc5c$export$535bd6ca7f90a273 as useIsSSR};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"active\", \"eventKey\", \"mountOnEnter\", \"transition\", \"unmountOnExit\", \"role\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"],\n  _excluded2 = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n  _excluded3 = [\"as\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTabPanel(_ref) {\n  let {\n      active,\n      eventKey,\n      mountOnEnter,\n      transition,\n      unmountOnExit,\n      role = 'tabpanel',\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const context = useContext(TabContext);\n  if (!context) return [Object.assign({}, props, {\n    role\n  }), {\n    eventKey,\n    isActive: active,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n  const {\n      activeKey,\n      getControlledId,\n      getControllerId\n    } = context,\n    rest = _objectWithoutPropertiesLoose(context, _excluded2);\n  const key = makeEventKey(eventKey);\n  return [Object.assign({}, props, {\n    role,\n    id: getControlledId(eventKey),\n    'aria-labelledby': getControllerId(eventKey)\n  }), {\n    eventKey,\n    isActive: active == null && key != null ? makeEventKey(activeKey) === key : active,\n    transition: transition || rest.transition,\n    mountOnEnter: mountOnEnter != null ? mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: unmountOnExit != null ? unmountOnExit : rest.unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n}\nconst TabPanel = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref2, ref) => {\n  let {\n      as: Component = 'div'\n    } = _ref2,\n    props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n  const [tabPanelProps, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = NoopTransition\n  }] = useTabPanel(props);\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, tabPanelProps, {\n          ref: ref,\n          hidden: !isActive,\n          \"aria-hidden\": !isActive\n        }))\n      })\n    })\n  });\n});\nTabPanel.displayName = 'TabPanel';\nexport default TabPanel;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { useSSRSafeId } from './ssr';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport TabPanel from './TabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Tabs = props => {\n  const {\n    id: userId,\n    generateChildId: generateCustomChildId,\n    onSelect: propsOnSelect,\n    activeKey: propsActiveKey,\n    defaultActiveKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = props;\n  const [activeKey, onSelect] = useUncontrolledProp(propsActiveKey, defaultActiveKey, propsOnSelect);\n  const id = useSSRSafeId(userId);\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\nTabs.Panel = TabPanel;\nexport default Tabs;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('nav-item');","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","import classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('tab-content');","import NoopTransition from '@restart/ui/NoopTransition';\nimport Fade from './Fade';\nexport default function getTabTransitionComponent(transition) {\n  if (typeof transition === 'boolean') {\n    return transition ? Fade : NoopTransition;\n  }\n  return transition;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport TabContext from '@restart/ui/TabContext';\nimport { useTabPanel } from '@restart/ui/TabPanel';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabPane = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  transition,\n  ...props\n}, ref) => {\n  const [{\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...rest\n  }, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = Fade\n  }] = useTabPanel({\n    ...props,\n    transition: getTabTransitionComponent(transition)\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, {\n          ...rest,\n          ref: ref,\n          className: classNames(className, prefix, isActive && 'active')\n        })\n      })\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseTabs from '@restart/ui/Tabs';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    tabAttrs,\n    id\n  } = child.props;\n  if (title == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      ...tabAttrs,\n      children: title\n    })\n  });\n}\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    variant = 'tabs',\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(BaseTabs, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: getTabTransitionComponent(transition),\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, {\n      ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      variant: variant,\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = {\n          ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        delete childProps.tabAttrs;\n        return /*#__PURE__*/_jsx(TabPane, {\n          ...childProps\n        });\n      })\n    })]\n  });\n};\nTabs.displayName = 'Tabs';\nexport default Tabs;","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, {\n  ...props,\n  transition: getTabTransitionComponent(transition)\n});\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string,\n  /**\n   * Object containing attributes to pass to underlying nav link.\n   */\n  tabAttrs: PropTypes.object\n};\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n  // Needed otherwise docs error out.\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","// extracted by mini-css-extract-plugin\nexport var active = \"active\";\nexport var owluiButtonContainer = \"owlui-button-container\";\nexport var owluiClear = \"owlui-clear\";\nexport var owluiDefinition = \"owlui-definition\";\nexport var owluiGlossaryTerm = \"owlui-glossary-term\";\nexport var owluiIcon = \"owlui-icon\";\nexport var owluiIconExpanded = \"owlui-icon-expanded\";\nexport var owluiLessonButton = \"owlui-lesson-button\";\nexport var owluiLessonIcon = \"owlui-lesson-icon\";\nexport var owluiLessonIconActive = \"owlui-lesson-icon-active\";\nexport var owluiLessonLink = \"owlui-lesson-link\";\nexport var owluiLessonLinkActive = \"owlui-lesson-link-active\";\nexport var owluiLessonList = \"owlui-lesson-list\";\nexport var owluiModuleButton = \"owlui-module-button\";\nexport var owluiModuleLessons = \"owlui-module-lessons\";\nexport var owluiModuleNameActive = \"owlui-module-name-active\";\nexport var owluiNavButton = \"owlui-nav-button\";\nexport var owluiNavGlossary = \"owlui-nav-glossary\";\nexport var owluiNavItem = \"owlui-nav-item\";\nexport var owluiNavResources = \"owlui-nav-resources\";\nexport var owluiOutlineDuration = \"owlui-outline-duration\";\nexport var owluiOutlineFooter = \"owlui-outline-footer\";\nexport var owluiOutlineOffcanvas = \"owlui-outlineOffcanvas\";\nexport var owluiOutlineSubtitle = \"owlui-outline-subtitle\";\nexport var owluiResourceContainer = \"owlui-resource-container\";\nexport var owluiResourceDescription = \"owlui-resource-description\";\nexport var owluiResourceName = \"owlui-resource-name\";\nexport var owluiResourceTitle = \"owlui-resource-title\";\nexport var owluiSearchBar = \"owlui-search-bar\";\nexport var owluiSearchTerm = \"owlui-search-term\";\nexport var owluiTabContent = \"owlui-tab-content\";\nexport var owluiTabsContainer = \"owlui-tabs-container\";\nexport var owluiTitleContainer = \"owlui-title-container\";\nexport var owluiWord = \"owlui-word\";","import React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport utils from '../../utils';\nimport * as _css from './_navbar.scss';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const NavModule = ({ pageId, config, mIdx }) => {\n  const Scrowl = window['Scrowl'];\n  const currentSlide = pageId;\n\n  let moduleSlides: Array<string> = [];\n\n  config.lessons.forEach((lesson, _i) => {\n    const slide = `module-${mIdx}--lesson-${lesson.lesson.id}`;\n    moduleSlides.push(slide);\n  });\n\n  //@ts-ignore\n  const [isOpen, setOpen] = moduleSlides.includes(pageId)\n    ? useState(true)\n    : useState(false);\n\n  const handleToggleOpen = (ev) => {\n    ev.preventDefault();\n    // @ts-ignore\n    if (!moduleSlides.includes(pageId)) {\n      setOpen(!isOpen);\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.moduleButton} onClick={handleToggleOpen}>\n        <Scrowl.ui.Icon\n          icon=\"chevron_right\"\n          display=\"outlined\"\n          className={isOpen ? css.iconExpanded : css.icon}\n        />\n        <h5\n          className={\n            // @ts-ignore\n            moduleSlides.includes(pageId)\n              ? css.moduleNameActive\n              : isOpen\n              ? css.moduleNameExpanded\n              : css.moduleName\n          }\n        >\n          {config.module.name}\n        </h5>\n      </div>\n      <Collapse in={isOpen}>\n        <ul className={css.lessonList}>\n          {config.lessons.map((lesson, lIdx) => {\n            const id = `module-${mIdx}--lesson-${lesson.lesson.id}`;\n            const url = `/${id}`;\n            const lessonName = lesson.lesson.name;\n\n            return (\n              <li key={lIdx}>\n                <Link to={url}>\n                  <span className={css.lessonButton}>\n                    <Scrowl.ui.Icon\n                      icon=\"arrow_drop_down_circle\"\n                      display=\"outlined\"\n                      className={\n                        id === currentSlide\n                          ? css.lessonIconActive\n                          : css.lessonIcon\n                      }\n                    />\n                    <p\n                      className={`${\n                        id === currentSlide\n                          ? css.lessonLinkActive\n                          : css.lessonLink\n                      }`}\n                    >\n                      {lessonName}\n                    </p>\n                  </span>\n                </Link>\n              </li>\n            );\n          })}\n          {isOpen ? <hr /> : ''}\n        </ul>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default {\n  NavModule,\n};\n","import React from 'react';\nimport utils from '../../utils';\nimport * as _css from './_navbar.scss';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const NavResource = ({ resource }) => {\n  return (\n    <div className={css.resourceContainer}>\n      <a href={resource.filename} className={css.resourceName}>\n        {resource.title}\n      </a>\n      <p className={css.resourceDescription}>{resource.description}</p>\n    </div>\n  );\n};\n\nexport default {\n  NavResource,\n};\n","import React, { useEffect } from 'react';\nimport utils from '../../utils';\nimport * as _css from './_navbar.scss';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const SearchBar = ({\n  searchTerm,\n  setSearchTerm,\n  confirmedSearchTerm,\n  setConfirmedSearchTerm,\n}) => {\n  const Scrowl = window['Scrowl'];\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    switch (event.code) {\n      case 'Enter':\n        doSearch();\n        break;\n      case 'Escape':\n        clearSearch(event);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const doSearch = () => {\n    setConfirmedSearchTerm(searchTerm);\n  };\n\n  const clearSearch = (e) => {\n    if (\n      e.target.classList[0] === 'input' ||\n      e.target.classList[0] === 'owlui-clear'\n    ) {\n      e.preventDefault();\n      e.target.blur();\n      setSearchTerm('');\n      setConfirmedSearchTerm('');\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n  }, [searchTerm]);\n\n  return (\n    <div className={css.searchBar}>\n      <Scrowl.ui.Icon icon=\"search\" display=\"outlined\" />\n      <div className={css.searchTerm}>\n        <input\n          type=\"text\"\n          placeholder=\"Search glossary...\"\n          value={searchTerm}\n          onChange={handleChange}\n        />\n      </div>\n\n      {confirmedSearchTerm !== '' ? (\n        <button\n          className={css.clear}\n          onClick={(e) => {\n            clearSearch(e);\n          }}\n          aria-label=\"Clear Search\"\n          title=\"Clear Search\"\n        >\n          <Scrowl.ui.Icon icon=\"close\" display=\"outlined\" />\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default {\n  SearchBar,\n};\n","import { Fragment, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Highlight = props => {\n  var {\n    children,\n    value,\n    color,\n    backgroundColor,\n    render\n  } = props;\n  var child = useMemo(() => render ? render(value, color, backgroundColor) : /*#__PURE__*/_jsx(\"span\", {\n    style: {\n      color,\n      backgroundColor\n    },\n    children: value\n  }), [color, backgroundColor, value]);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [children, value && child]\n  });\n};\n\nvar KeywordsInner = props => {\n  var {\n    children,\n    caseIgnored = true,\n    color = 'inherit',\n    backgroundColor = '#ffff00',\n    value,\n    render\n  } = props;\n  if (typeof children !== 'string') return /*#__PURE__*/_jsx(Fragment, {\n    children: children\n  });\n  var splitMatch = new RegExp((value || '').replace(/\\\\/g, '\\\\\\\\'), caseIgnored ? 'ig' : 'g');\n  var values = value ? children.match(splitMatch) : [];\n  var matched = children.split(splitMatch);\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: matched.map((item, idx) => {\n      return /*#__PURE__*/_jsx(Highlight, {\n        color: color,\n        value: matched.length > idx + 1 ? values[idx] : undefined,\n        render: render,\n        backgroundColor: backgroundColor,\n        children: item\n      }, idx);\n    })\n  });\n};\n\nexport default KeywordsInner;\n//# sourceMappingURL=index.js.map","import React, { useEffect, useState, useCallback } from 'react';\nimport utils from '../../utils';\nimport { SearchBar } from './search-bar';\nimport * as _css from './_navbar.scss';\nimport Keywords from 'react-keywords';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const NavGlossary = ({ glossary }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [confirmedSearchTerm, setConfirmedSearchTerm] = useState('');\n  const [filteredTerms, setFilteredTerms] = useState(glossary);\n\n  const sortedGlossary = filteredTerms.sort((a, b) => {\n    const textA = a.word.toLowerCase();\n    const textB = b.word.toLowerCase();\n    return textA < textB ? -1 : textA > textB ? 1 : 0;\n  });\n\n  const letterTerms = {};\n\n  sortedGlossary.forEach((glossaryTerm) => {\n    let term = glossaryTerm.word;\n    let definition = glossaryTerm.definition;\n\n    let termLetter = term[0].toUpperCase();\n\n    if (!letterTerms[termLetter]) {\n      letterTerms[termLetter] = {};\n    }\n\n    letterTerms[termLetter][term] = definition;\n  });\n\n  const letters: JSX.Element[] = [];\n  for (let letter in letterTerms) {\n    const terms: JSX.Element[] = [];\n    const dictTermList = letterTerms[letter];\n\n    for (let word in dictTermList) {\n      terms.push(\n        <div className={css.glossaryTerm} key={word}>\n          <div className={css.word}>\n            <Keywords value={confirmedSearchTerm}>{word}</Keywords>\n          </div>\n          <div className={css.definition}>\n            <Keywords value={confirmedSearchTerm}>\n              {dictTermList[word]}\n            </Keywords>\n          </div>\n        </div>\n      );\n    }\n\n    letters.push(\n      <div key={letter}>\n        <header>{letter}</header>\n        {terms}\n      </div>\n    );\n  }\n\n  const highlighter = useCallback(() => {\n    const result = glossary.filter((term) => {\n      return (\n        term.word.toLowerCase().includes(confirmedSearchTerm.toLowerCase()) ||\n        term.definition\n          .toLowerCase()\n          .includes(confirmedSearchTerm.toLowerCase())\n      );\n    });\n\n    setFilteredTerms(result);\n  }, [confirmedSearchTerm]);\n\n  useEffect(() => {\n    if (confirmedSearchTerm) {\n      highlighter();\n    } else {\n      setFilteredTerms(glossary);\n    }\n  }, [confirmedSearchTerm]);\n\n  return (\n    <div>\n      <SearchBar\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        confirmedSearchTerm={confirmedSearchTerm}\n        setConfirmedSearchTerm={setConfirmedSearchTerm}\n      />\n      <div className={css.navGlossary}>{letters}</div>\n    </div>\n  );\n};\n\nexport default {\n  NavGlossary,\n};\n","// @ts-ignore\nimport React, { useEffect, useState } from 'react';\nimport {\n  ThemeProvider,\n  Navbar,\n  Offcanvas,\n  Container,\n  Tabs,\n  Tab,\n} from 'react-bootstrap';\nimport utils, { CssMapProps } from '../../utils';\nimport * as _css from './_navbar.scss';\nimport { NavModule } from './nav-module';\nimport { NavResource } from './nav-resource';\nimport { NavGlossary } from './nav-glossary';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const NavBar = ({ pageId, project, slides }) => {\n  const Scrowl = window['Scrowl'];\n  const [tabKey, setTabKey] = useState('outline');\n  const themePrefixes: CssMapProps = {};\n\n  themePrefixes['nav'] = `owlui-nav`;\n  themePrefixes['nav-tabs'] = `owlui-nav-tabs`;\n  themePrefixes['nav-item'] = `owlui-nav-item`;\n  themePrefixes['nav-link'] = `owlui-nav-link`;\n  themePrefixes['navbar'] = `owlui-navbar`;\n  themePrefixes['navbar-toggler'] = `owlui-navbar-toggler`;\n  themePrefixes['tab-pane'] = `owlui-tab-pane`;\n  themePrefixes['tab-content'] = `owlui-tab-content`;\n  themePrefixes['offcanvas'] = `owlui-offcanvas`;\n  themePrefixes['container'] = `owlui-container`;\n\n  let currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n  let currentIndex = 0;\n\n  const OutlineFooter = () => {\n    const targets = slides?.map((slide) => {\n      return `module-${slide.moduleId}--lesson-${slide.lessonId}--slide-${slide.id}-${slide.template.meta.filename}`;\n    });\n\n    const scrollSlide = (ev) => {\n      if (Scrowl && Scrowl.runtime) {\n        if (Scrowl.runtime.API !== null) {\n          const [error, suspendData] = Scrowl.runtime.getSuspendData();\n          if (suspendData === '{}') {\n            return;\n          } else {\n            const parsedData = JSON.parse(suspendData);\n            if (error || !parsedData.courseStarted) {\n              return;\n            }\n          }\n        }\n      }\n\n      let matchingId;\n      if (targets && currentSlide !== 'owlui-last') {\n        matchingId = targets.find((t) => {\n          return t === currentSlide;\n        });\n      } else {\n        currentIndex = targets.length;\n      }\n\n      if (matchingId) {\n        currentIndex = targets?.indexOf(matchingId);\n      }\n\n      let targetIndex;\n      let targetElement;\n\n      switch (ev.target.innerText) {\n        case 'Previous Slide':\n          if (currentIndex === 1) {\n            targetIndex = targets[0];\n            targetElement = document.querySelector(`#${targetIndex}`);\n            currentIndex = 0;\n            currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n            setTimeout(() => {\n              targetElement?.scrollIntoView(false);\n            }, 0);\n          } else {\n            targetIndex = targets[currentIndex - 1];\n            targetElement = document.querySelector(`#${targetIndex}`);\n            targetElement?.scrollIntoView(false);\n          }\n          break;\n        case 'Next Slide':\n          if (currentIndex + 1 === targets.length) {\n            targetElement = document.querySelector('.owlui-last');\n            targetElement?.scrollIntoView();\n            currentSlide = 'owlui-last';\n          } else {\n            targetIndex = targets[currentIndex + 1];\n            targetElement = document.querySelector(`#${targetIndex}`);\n            targetElement?.scrollIntoView();\n          }\n          break;\n      }\n\n      const currentSlideObj = {\n        currentIndex: currentIndex,\n        currentSlide: currentSlide,\n      };\n\n      const currentSlideEvent = new CustomEvent('CurrentSlideNavUpdate', {\n        detail: currentSlideObj,\n      });\n      document.dispatchEvent(currentSlideEvent);\n    };\n\n    return (\n      <div className={css.outlineFooter}>\n        <div className={css.buttonContainer}>\n          <button onClick={scrollSlide}>Previous Slide</button>\n          <button onClick={scrollSlide}>Next Slide</button>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const handleSlideEvent = (ev) => {\n      currentSlide = ev.detail.currentTarget.id;\n    };\n    const handleUpdateSlideEvent = (ev) => {\n      currentSlide = ev.detail.currentSlide;\n    };\n    document.addEventListener('CurrentSlidePageUpdate', handleUpdateSlideEvent);\n    document.addEventListener('slide.enter', handleSlideEvent);\n\n    let options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.8,\n    };\n\n    let introObserver = new IntersectionObserver(() => {\n      currentSlide = 'module-0--lesson-0--slide-0-lesson-intro';\n    }, options);\n\n    let finalSlideObserver = new IntersectionObserver(() => {\n      currentSlide = 'owlui-last';\n    }, options);\n\n    let introSlide = document.querySelector(\n      '#module-0--lesson-0--slide-0-lesson-intro'\n    );\n\n    let lastSlide = document.querySelector('.owlui-last');\n\n    if (introSlide) {\n      introObserver.observe(introSlide);\n    }\n    if (lastSlide) {\n      finalSlideObserver.observe(lastSlide);\n    }\n  }, []);\n\n  return (\n    <ThemeProvider prefixes={themePrefixes}>\n      <Navbar key=\"1\" expand={false} className=\"mb-3\">\n        <Container fluid>\n          <Navbar.Toggle\n            className={css.navButton}\n            aria-controls={`offcanvasNavbar-expand-${false}`}\n          />\n          <Navbar.Offcanvas\n            id={`offcanvasNavbar-expand-${false}`}\n            aria-labelledby={`offcanvasNavbarLabel-expand-${false}`}\n            placement=\"start\"\n          >\n            <Tabs\n              className={css.tabsContainer}\n              activeKey={tabKey}\n              // @ts-ignore\n              onSelect={(tab) => setTabKey(tab)}\n            >\n              <Tab eventKey=\"outline\" key=\"outline\" title=\"Outline\">\n                <Offcanvas.Body className={css.outlineOffcanvas}>\n                  <div className={css.titleContainer}>\n                    <h3>{project.name}</h3>\n                    <h4 className={css.outlineSubtitle}>{project.subtitle}</h4>\n                    <span className={css.outlineDuration}>\n                      <Scrowl.ui.Icon icon=\"schedule\" display=\"outlined\" />\n                      <h5>60 min</h5>\n                    </span>\n                  </div>\n                  {project &&\n                    project.outlineConfig.map((config, mIdx) => {\n                      return (\n                        <div className={css.moduleLessons} key={mIdx}>\n                          <NavModule\n                            pageId={pageId}\n                            config={config}\n                            mIdx={mIdx}\n                            key={mIdx}\n                          />\n                        </div>\n                      );\n                    })}\n                  <OutlineFooter />\n                </Offcanvas.Body>\n              </Tab>\n              <Tab eventKey=\"resources\" key=\"resources\" title=\"Resources\">\n                <Offcanvas.Body className={css.outlineOffcanvas}>\n                  <div className={css.titleContainer}>\n                    <h3 className={css.resourceTitle}>Additional Resources</h3>\n                    {project.resources &&\n                      project.resources.map((resource, idx) => {\n                        return (\n                          <div className={css.navResources} key={idx}>\n                            <NavResource resource={resource} />\n                            <hr />\n                          </div>\n                        );\n                      })}\n                  </div>\n                </Offcanvas.Body>\n              </Tab>\n              <Tab eventKey=\"glossary\" key=\"glossary\" title=\"Glossary\">\n                <Offcanvas.Body>\n                  <div>\n                    {project.glossary && (\n                      <NavGlossary glossary={project.glossary} />\n                    )}\n                  </div>\n                </Offcanvas.Body>\n              </Tab>\n            </Tabs>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </ThemeProvider>\n  );\n};\n\nexport default {\n  NavBar,\n};\n","import React, { useState, useEffect } from 'react';\nimport { PageProps } from './pages.types';\nimport { TemplateComponent } from '../../root/root.types';\nimport { Error } from '../../components';\n\nexport const Page = ({ slides, templates, slideId, ...props }: PageProps) => {\n  const Scrowl = window['Scrowl'];\n  const [hasStartedCourse, setHasStartedCourse] = useState(true);\n\n  console.log('templates: ', templates);\n\n  if (\n    Scrowl &&\n    Scrowl.runtime &&\n    Scrowl.runtime.API !== null &&\n    hasStartedCourse !== false\n  ) {\n    const [_courseStartError, suspendData] = Scrowl.runtime.getSuspendData();\n\n    const parsedData = JSON.parse(suspendData);\n\n    if (\n      // @ts-ignore\n      !Object.entries(parsedData).length > 0 ||\n      (parsedData &&\n        parsedData.courseStarted &&\n        parsedData.courseStarted !== true)\n    ) {\n      setHasStartedCourse(false);\n    }\n  }\n\n  const controller = new Scrowl.core.scroll.Controller();\n\n  let currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n  let currentIndex = 0;\n\n  const targets = slides?.map((slide) => {\n    return `module-${slide.moduleId}--lesson-${slide.lessonId}--slide-${slide.id}-${slide.template.meta.filename}`;\n  });\n\n  const handleArrowKeys = (ev) => {\n    if (Scrowl && Scrowl.runtime) {\n      if (Scrowl.runtime.API !== null) {\n        const [error, suspendData] = Scrowl.runtime.getSuspendData();\n        if (suspendData === '{}') {\n          return;\n        } else {\n          const parsedData = JSON.parse(suspendData);\n          if (error || !parsedData.courseStarted) {\n            return;\n          }\n        }\n      }\n    }\n\n    let matchingId;\n\n    if (targets && currentSlide !== 'owlui-last') {\n      matchingId = targets.find((t) => {\n        return t === currentSlide;\n      });\n    } else {\n      currentIndex = targets.length;\n    }\n\n    if (matchingId) {\n      currentIndex = targets?.indexOf(matchingId);\n    }\n\n    let targetID;\n    let targetElement;\n\n    switch (ev.key) {\n      case 'ArrowLeft':\n        if (currentIndex === 1) {\n          targetID = targets[0];\n          targetElement = document.querySelector(`#${targetID}`);\n          currentIndex = 0;\n          currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n          setTimeout(() => {\n            targetElement?.scrollIntoView(false);\n          }, 0);\n        } else {\n          targetID = targets[currentIndex - 1];\n          targetElement = document.querySelector(`#${targetID}`);\n          setTimeout(() => {\n            targetElement?.scrollIntoView(false);\n          }, 0);\n        }\n        break;\n      case 'ArrowRight':\n        if (currentIndex + 1 === targets.length) {\n          targetElement = document.querySelector('.owlui-last');\n          setTimeout(() => {\n            targetElement?.scrollIntoView(true);\n          }, 0);\n          currentSlide = 'owlui-last';\n        } else {\n          targetID = targets[currentIndex + 1];\n          targetElement = document.querySelector(`#${targetID}`);\n\n          setTimeout(() => {\n            targetElement?.scrollIntoView(true);\n          }, 0);\n        }\n        break;\n    }\n\n    const currentSlideObj = {\n      currentIndex: currentIndex,\n      currentSlide: currentSlide,\n    };\n\n    const currentSlideEvent = new CustomEvent('CurrentSlidePageUpdate', {\n      detail: currentSlideObj,\n    });\n    document.dispatchEvent(currentSlideEvent);\n  };\n\n  useEffect(() => {\n    const handleSlideEvent = (ev) => {\n      currentSlide = ev.detail.currentTarget.id;\n    };\n    const handleUpdateSlideEvent = (ev) => {\n      currentSlide = ev.detail.currentSlide;\n    };\n\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        handleArrowKeys(e);\n      }\n    });\n\n    document.addEventListener('CurrentSlideNavUpdate', handleUpdateSlideEvent);\n    document.addEventListener('slide.enter', handleSlideEvent);\n\n    let options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.8,\n    };\n\n    const slidesObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting === true) {\n          currentSlide = entry.target.id;\n\n          const currentSlideObj = {\n            currentIndex: currentIndex,\n            currentSlide: currentSlide,\n          };\n\n          const currentSlideEvent = new CustomEvent('CurrentSlidePageUpdate', {\n            detail: currentSlideObj,\n          });\n          document.dispatchEvent(currentSlideEvent);\n        }\n      });\n    });\n\n    const finalSlideObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting === true) {\n          currentSlide = 'owlui-last';\n        }\n      });\n    }, options);\n\n    let lastSlide = document.querySelector('.owlui-last');\n    if (lastSlide) {\n      finalSlideObserver.observe(lastSlide);\n    }\n\n    let targetElements;\n\n    setTimeout(() => {\n      targetElements = targets.map((target) => {\n        return document.querySelector(`#${target}`);\n      });\n\n      targetElements.forEach((element) => {\n        if (element) {\n          slidesObserver.observe(element);\n        }\n      });\n    }, 500);\n  }, [slides, hasStartedCourse]);\n\n  useEffect(() => {\n    if (slideId && slideId?.length > 0) {\n      document.querySelector(`#${slideId}`)?.scrollIntoView();\n    } else {\n      window.scrollTo({ top: 0 });\n    }\n  }, [slides]);\n\n  useEffect(() => {\n    return () => {\n      controller.destroy(true);\n    };\n  });\n\n  useEffect(() => {\n    const handleCourseStart = (_ev) => {\n      setHasStartedCourse(true);\n    };\n\n    document.addEventListener('startCourse', handleCourseStart);\n  }, []);\n\n  if (!hasStartedCourse) {\n    const id = `${props.id}--slide-${slides[0].id}`;\n    const component = slides[0].template.meta.component;\n    const Template = templates[component] as TemplateComponent;\n\n    return (\n      <Template\n        key={1}\n        id={id}\n        schema={slides[0].template}\n        controller={controller}\n        slides={slides[0]}\n      />\n    );\n  } else {\n    console.log('slides: ', slides);\n    return (\n      <>\n        {slides.map((slide, idx) => {\n          const id = `${props.id}--slide-${slide.id}`;\n          const component = slide.template.meta.component;\n          console.log('hmm ', templates[component]);\n\n          if (!templates.hasOwnProperty(component)) {\n            return <Error msg={`Unabled to find template: ${component}`} />;\n          }\n\n          const Template = templates[component] as TemplateComponent;\n\n          return (\n            <Template\n              key={idx}\n              id={id}\n              schema={slide.template}\n              controller={controller}\n              slides={slides}\n            />\n          );\n        })}\n      </>\n    );\n  }\n};\n\nexport default {\n  Page,\n};\n","import React, { Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PageDefinition } from './pages.types';\nimport { PlayerTemplateList } from '../../root/root.types';\nimport utils from '../../utils';\nimport * as _css from '../../root/_root.scss';\nimport { NavBar } from '../../components/navbar';\nimport { Page } from './page';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nconst updateCourseProgress = (project, id) => {\n  const Scrowl = window['Scrowl'];\n\n  let lessonsArray: { index: number; targetId: string; lesson: any }[] = [];\n  let counter = 1;\n  project.outlineConfig.forEach((module, mIdx) => {\n    module.lessons.forEach((lesson, lIdx) => {\n      const lessonObj = {\n        index: counter,\n        targetId: `module-${mIdx}--lesson-${lIdx}`,\n        lesson: lesson,\n      };\n      counter++;\n      lessonsArray.push(lessonObj);\n    });\n  });\n\n  const currentLesson = lessonsArray.find((lesson) => {\n    return lesson.targetId === id;\n  });\n\n  const currentLessonIndex = currentLesson?.index;\n  const totalLessons = lessonsArray.length;\n\n  let percentageCompleted;\n\n  if (currentLessonIndex) {\n    percentageCompleted = currentLessonIndex / totalLessons;\n  }\n\n  Scrowl.runtime?.updateProgress(percentageCompleted);\n  if (window['API_1484_11']) {\n    window['API_1484_11'].SetValue('cmi.progress_measure', percentageCompleted);\n  }\n};\n\nconst finishCourse = () => {\n  const Scrowl = window['Scrowl'];\n\n  if (Scrowl.runtime) {\n    Scrowl.runtime.finish();\n  }\n\n  if (window['API_1484_11']) {\n    window['API_1484_11'].SetValue('cmi.score.raw', 90);\n    window['API_1484_11'].SetValue('cmi.score.min', 70);\n    window['API_1484_11'].SetValue('cmi.score.max', 100);\n    window['API_1484_11'].SetValue('cmi.score.scaled', 90 / 100);\n    window['API_1484_11'].SetValue('cmi.success_status', 'passed');\n    window['API_1484_11'].SetValue('cmi.completion_status', 'completed');\n    window['API_1484_11'].SetValue('cmi.progress_measure', 1);\n  }\n};\n\nexport const create = (\n  project,\n  templateList: PlayerTemplateList,\n  slideId: string\n) => {\n  const Scrowl = window['Scrowl'];\n  const controller = new Scrowl.core.scroll.Controller();\n  const data: Array<PageDefinition> = [];\n\n  console.log('template list: ', templateList);\n\n  project.outlineConfig.forEach((module, mIdx) => {\n    module.lessons.forEach((page, lIdx) => {\n      const id = `module-${mIdx}--lesson-${page.lesson.id}`;\n      const url = `/${id}`;\n\n      let nextLessonUrl;\n      let nextLessonId;\n      let nextLessonText;\n\n      if (\n        lIdx < module.lessons.length - 1 ||\n        mIdx < project.outlineConfig.length - 1\n      ) {\n        nextLessonId = `module-${mIdx}--lesson-${page.lesson.id + 1}`;\n        nextLessonUrl = `/${nextLessonId}`;\n        nextLessonText = `Continue to the next lesson`;\n      }\n\n      if (\n        lIdx === module.lessons.length - 1 &&\n        mIdx <= project.outlineConfig.length - 1\n      ) {\n        nextLessonId = `module-${mIdx + 1}--lesson-${page.lesson.id + 1}`;\n        nextLessonUrl = `/${nextLessonId}`;\n        nextLessonText = `Continue to the first Lesson of Module ${mIdx + 1}`;\n      }\n\n      data.push({\n        module: module.module,\n        lesson: page.lesson,\n        url,\n        Element: () => {\n          return (\n            <>\n              <NavBar slides={page.slides} pageId={id} project={project} />\n              <div className=\"owlui-lesson\">\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Page\n                    id={id}\n                    slides={page.slides}\n                    templates={templateList}\n                    slideId={slideId}\n                  />\n                </Suspense>\n\n                <Scrowl.core.Template\n                  className=\"owlui-last\"\n                  id={`slide-end-${id}`}\n                  controller={controller}\n                  notScene={true}\n                >\n                  <div className={css.nextLessonContainer}>\n                    {lIdx < module.lessons.length - 1 ||\n                    mIdx < project.outlineConfig.length - 1 ? (\n                      <Link\n                        to={nextLessonUrl}\n                        onClick={() => updateCourseProgress(project, id)}\n                      >\n                        {nextLessonText}\n                      </Link>\n                    ) : (\n                      <Scrowl.ui.Button onClick={finishCourse}>\n                        Finish Course\n                      </Scrowl.ui.Button>\n                    )}\n                  </div>\n                </Scrowl.core.Template>\n              </div>\n            </>\n          );\n        },\n      });\n    });\n  });\n\n  return data;\n};\n\nexport default {\n  create,\n};\n","import * as pages from './pages';\n\nexport const Pages = pages;\n\nexport default {\n  Pages,\n};\n","// extracted by mini-css-extract-plugin\nexport var owluiHintText = \"owlui-hint-text\";\nexport var owluiIconScroll = \"owlui-icon-scroll\";\nexport var owluiScrollHint = \"owlui-ScrollHint\";\nexport var scroll = \"scroll\";\nexport var visible = \"visible\";","import React, { useEffect, useState } from 'react';\nimport utils from '../../utils';\nimport * as _css from './_scrollHint.scss';\n\nconst css = utils.css.removeMapPrefix(_css);\n\nexport const ScrollHint = () => {\n  const [visible, setVisible] = useState(false);\n  const [noticeVisible, setNoticeVisible] = useState(false);\n  const [busy, setBusy] = useState(false);\n\n  let secondsSinceIdle = 0;\n\n  const onScroll = () => {\n    updateBusy();\n\n    if (visible) {\n      hide();\n    }\n\n    secondsSinceIdle = 0;\n  };\n\n  const updateBusy = () => {\n    if (visible) {\n      hide();\n    }\n\n    setBusy(true);\n  };\n\n  const checkIdleStatus = () => {\n    secondsSinceIdle++;\n\n    if (!visible && secondsSinceIdle > 5) {\n      show();\n    }\n\n    if (!noticeVisible && secondsSinceIdle > 10) {\n      showNotice();\n    }\n  };\n\n  const show = () => {\n    setBusy(false);\n    setVisible(true);\n  };\n\n  const showNotice = () => {\n    if (noticeVisible) {\n      return;\n    }\n\n    setNoticeVisible(true);\n  };\n\n  const hide = () => {\n    if (!visible && !noticeVisible) {\n      return;\n    }\n\n    setVisible(false);\n    setNoticeVisible(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    setInterval(checkIdleStatus, 1000);\n  }, [busy]);\n\n  return (\n    <div className={css.scrollHint + (visible ? ' visible' : '')}>\n      <div\n        className={css.hintText + (visible && noticeVisible ? ' visible' : '')}\n      >\n        <span>Scroll To Continue</span>\n      </div>\n      <div className={css.iconScroll}></div>\n    </div>\n  );\n};\n\nexport default {\n  ScrollHint,\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  MemoryRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './_root.scss';\nimport { PlayerRootProps } from './root.types';\nimport Config from './config';\nimport { Error as ErrorComponent } from '../components';\nimport { ErrorModal } from '../components/modal';\nimport { Preview as PreviewPanel } from '../components/preview';\nimport { Pages } from '../services';\nimport { formatResponse } from '../utils/formatResponse';\nimport { ScrollHint } from '../components/scrollHint';\n\nexport const Root = ({\n  project,\n  templateList,\n  scorm,\n  ...props\n}: PlayerRootProps) => {\n  const Scrowl = window['Scrowl'];\n  let apiPreference;\n\n  const [showPanel, _setShowPanel] = useState(true);\n\n  if (scorm && scorm.outputFormat) {\n    switch (scorm.outputFormat) {\n      case '2004 3rd Edition':\n        apiPreference = '2004v3';\n        break;\n      case '1.2':\n      default:\n        apiPreference = '1.2';\n    }\n  }\n\n  if (window['Scorm2004API']) {\n    // @ts-ignore\n    window['API_1484_11'] = new Scorm2004API({});\n  }\n\n  if (window['API_1484_11'] !== undefined) {\n    let authors;\n    if (scorm) {\n      authors = scorm.authors;\n    } else {\n      authors = '';\n    }\n    const initialData = {\n      'learner_id': '1',\n      'learner_name': authors,\n      'completion_status': 'incomplete',\n    };\n    window['API_1484_11'].loadFromJSON(initialData);\n\n    window['API_1484_11'].Initialize();\n  }\n\n  if (Scrowl.runtime) {\n    const [isStarted] = Scrowl.runtime.start(apiPreference);\n\n    if (!isStarted) {\n      console.error('unable to start runtime');\n    }\n  }\n\n  if (!templateList || !Object.keys(templateList).length) {\n    return <ErrorComponent msg=\"Templates missing\" />;\n  }\n\n  if (!project || !project.slides || !project.slides.length) {\n    return <ErrorComponent msg=\"Slides missing\" />;\n  }\n\n  if (!project || !project.lessons || !project.lessons.length) {\n    return <ErrorComponent msg=\"Lessons missing\" />;\n  }\n\n  if (!project || !project.modules || !project.modules.length) {\n    return <ErrorComponent msg=\"Modules missing\" />;\n  }\n\n  const slides = project.slides;\n  const lessons = project.lessons;\n  const modules = project.modules;\n  const resources = project.resources;\n  const glossary = project.glossary;\n  const name = project.name;\n  const subtitle = project.subtitle;\n\n  let moduleIdx;\n  let lessonIdx;\n  let slideId;\n\n  if (Scrowl.runtime) {\n    let locationError;\n    let location;\n    try {\n      [locationError, location] = Scrowl.runtime.getLocation();\n    } catch (e) {\n      console.log(e);\n    }\n\n    if (!locationError && location && location.cur) {\n      moduleIdx = location.cur.m;\n      lessonIdx = location.cur.l;\n      slideId = location.slideId;\n    }\n  }\n\n  const config = Config.create(\n    slides,\n    lessons,\n    modules,\n    resources,\n    glossary,\n    name,\n    subtitle\n  );\n  const pages = Pages.create(config, templateList, slideId);\n\n  useEffect(() => {\n    const handleSlideEnter = (ev) => {\n      const sceneEvent = ev.detail;\n      const previousLocation = Scrowl.runtime?.getLocation();\n\n      type LocationObject = {\n        cur: {\n          m: number;\n          l: number;\n          s: number;\n        };\n        max: {\n          m: number;\n          l: number;\n          s: number;\n        };\n      };\n\n      const locationObj: LocationObject = {\n        cur: {\n          m: 0,\n          l: 0,\n          s: 0,\n        },\n        max: {\n          m: previousLocation?.[1].max ? previousLocation[1].max.m : 0,\n          l: previousLocation?.[1].max ? previousLocation[1].max.l : 0,\n          s: previousLocation?.[1].max ? previousLocation[1].max.s : 0,\n        },\n      };\n\n      const id = sceneEvent.currentTarget.id;\n\n      const shortenedId = id\n        .replace('module', 'm')\n        .replace('lesson', 'l')\n        .replace('slide', 's');\n\n      const splitEntries = shortenedId.split('--');\n\n      splitEntries.map((entry) => {\n        const keyPair = entry.split('-');\n        if (locationObj && locationObj.cur) {\n          locationObj.cur[keyPair[0]] = parseInt(keyPair[1]);\n        }\n      });\n\n      if (\n        !previousLocation ||\n        !previousLocation[1].max ||\n        previousLocation[1].max === undefined\n      ) {\n        Scrowl.runtime?.updateLocation(locationObj, id);\n        if (window['API_1484_11'] !== undefined) {\n          window['API_1484_11'].SetValue(\n            'cmi.location',\n            JSON.stringify(locationObj)\n          );\n        }\n      } else {\n        if (locationObj.cur.m > previousLocation[1].max.m) {\n          locationObj.max.m = locationObj.cur.m;\n\n          if (locationObj.cur.l < previousLocation[1].max.l) {\n            locationObj.max.l = locationObj.cur.l;\n          }\n        } else if (locationObj.cur.l > previousLocation?.[1].max.l) {\n          if (locationObj.cur.m >= previousLocation?.[1].max.m) {\n            locationObj.max.l = locationObj.cur.l;\n          }\n        }\n\n        Scrowl.runtime?.updateLocation(locationObj, id);\n      }\n    };\n    const handleSlideStart = (ev) => {\n      // @ts-ignore\n      const sceneEvent = ev.detail;\n    };\n    const handleSlideEnd = (ev) => {\n      // @ts-ignore\n      const sceneEvent = ev.detail;\n    };\n    const handleSlideLeave = (ev) => {\n      // @ts-ignore\n      const sceneEvent = ev.detail;\n    };\n\n    document.addEventListener('slide.enter', handleSlideEnter);\n    document.addEventListener('slide.start', handleSlideStart);\n    document.addEventListener('slide.end', handleSlideEnd);\n    document.addEventListener('slide.leave', handleSlideLeave);\n\n    return () => {\n      document.removeEventListener('slide.enter', handleSlideEnter);\n      document.removeEventListener('slide.start', handleSlideStart);\n      document.removeEventListener('slide.end', handleSlideEnd);\n      document.removeEventListener('slide.leave', handleSlideLeave);\n    };\n  }, [project]);\n\n  useEffect(() => {\n    if (Scrowl && Scrowl.runtime) {\n      Scrowl.runtime.getError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (Scrowl.runtime && Scrowl.runtime !== null) {\n      if (Scrowl.runtime.API === null) {\n        const errorObject = {\n          id: '600',\n          message: 'Unable to connect to API',\n          stack:\n            'This course was not able to connect to the SCORM API. Course data will not be saved to the LMS.',\n        };\n        const errorEvent = new CustomEvent('APIError', { detail: errorObject });\n        document.dispatchEvent(errorEvent);\n      }\n    }\n\n    if (window.navigator.onLine === false) {\n      const errorObject = {\n        id: '700',\n        message: 'No internet connection',\n        stack:\n          'You are not connected to the internet. Course data will not be saved.',\n      };\n      const onlineEvent = new CustomEvent('connectionError', {\n        detail: errorObject,\n      });\n      document.dispatchEvent(onlineEvent);\n    }\n    window.addEventListener('error', (event) => {\n      const errorEvent = new CustomEvent('playerError', { detail: event });\n      document.dispatchEvent(errorEvent);\n    });\n  }, [project, slides]);\n\n  let targetUrl;\n\n  if (moduleIdx !== undefined) {\n    targetUrl = `/module-${moduleIdx}--lesson-${lessonIdx}`;\n  }\n\n  if (window['API_1484_11']) {\n    window['API_1484_11'].on('SetValue.cmi.*', () => {\n      const value = window['API_1484_11'].GetValue('cmi');\n      const p = document.querySelector('#scorm-preview-content');\n      if (p) {\n        p.textContent = formatResponse(value);\n      }\n    });\n  }\n\n  return (\n    <Router>\n      <div id=\"scrowl-player\" {...props}>\n        <main className=\"owlui-lesson-wrapper\">\n          <ErrorModal />\n          <ScrollHint />\n          {window['API_1484_11'] !== undefined && showPanel ? (\n            <PreviewPanel />\n          ) : null}\n          <Routes>\n            {pages.map((page, idx) => {\n              return (\n                <Route key={idx} path={page.url} element={<page.Element />} />\n              );\n            })}\n            <Route\n              path=\"*\"\n              element={\n                <Navigate\n                  to={\n                    targetUrl && targetUrl.length > 1 ? targetUrl : pages[0].url\n                  }\n                />\n              }\n            />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default {\n  Root,\n};\n","import * as components from './components';\nimport { Root } from './root';\n\nexport * from './components/components.types';\nexport * from './root/root.types';\n\nexport const player = {\n  ...components,\n  Root,\n};\n\nexport default {\n  player,\n};\n","import { player } from '../src';\n\nwindow.Scrowl = window.Scrowl || {};\nwindow.Scrowl.player = player;\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__24__","__WEBPACK_EXTERNAL_MODULE__314__","__WEBPACK_EXTERNAL_MODULE__130__","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","default","condition","format","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","defineProperty","value","_len","validators","_key","_createChainableTypeChecker2","_len2","_key2","forEach","validator","result","obj","_createChainableTypeChecker","__esModule","validate","checkType","isRequired","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","concat","chainedCheckType","bind","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","err","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","k","Symbol","for","l","m","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","g","h","defaultProps","$$typeof","type","_owner","current","Fragment","jsx","jsxs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","o","enumerable","get","globalThis","this","Function","window","prop","r","toStringTag","msg","css","removeMapPrefix","cssMap","formattedMap","keys","ii","letter","toLocaleLowerCase","owluiOwluiNavTabs","owluiOwluiTabPane","owluiPane","owluiPaneHeading","owluiPaneLeft","owluiPaneLeftContent","owluiPaneLeftHeader","owluiPaneRight","owluiPaneRightContent","owluiPaneRightHeader","utils","Pane","children","className","side","paneStyles","pane","paneLeft","Slide","options","assign","target","source","Action","message","warning","cond","console","warn","createLocation","to","state","pathname","search","hash","parsePath","Math","random","substr","_ref","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","ResultType","Set","matchRoutes","routes","locationArg","basename","branches","flattenRoutes","sort","score","siblings","slice","every","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","index","relativePath","caseSensitive","startsWith","computeScore","_route$path","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","params","pathnameBase","normalizePathname","pattern","matcher","paramNames","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","document","createElement","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useIsomorphicLayoutEffect","cb","static","router","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","navigator","routePathnamesJson","go","parse","relative","useNavigateUnstable","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","encodeLocation","Provider","navigationType","Pop","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","super","revalidation","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","min","reduceRight","getChildren","Component","hookName","ctx","useRouteContext","thisRoute","MemoryRouter","_ref3","initialEntries","initialIndex","historyRef","entries","v5Compat","entry","createMemoryLocation","clampIndex","action","listener","max","getCurrentLocation","createHref","createURL","URL","Push","nextLocation","splice","delta","Replace","nextIndex","listen","fn","history","setState","Navigate","_ref4","jsonPath","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","AwaitRenderStatus","Promise","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","lazy","slides","lessons","modules","resources","glossary","subtitle","rootConfig","config","lCnt","lesson","configSlides","sCnt","lessonId","slide","outlineConfig","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","useBootstrapPrefix","prefix","defaultPrefix","useContext","dir","contextValue","useMemo","optionsSupported","onceSupported","passive","once","canUseDOM","addEventListener","removeEventListener","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","ownerDocument","size","scrollbarSize","recalc","scrollDiv","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useRef","useEffect","useCallback","toFnRef","refA","refB","mergeRefs","useWillUnmount","valueRef","onUnmount","getComputedStyle","psuedoElement","doc","defaultView","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","transforms","getPropertyValue","isTransform","removeProperty","cssText","emulateTransitionEnd","duration","called","setTimeout","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","remove","clearTimeout","transitionEnd","str","mult","parseFloat","removeEmulate","activeElement","active","nodeName","contains","context","compareDocumentPosition","ATTRIBUTE_PREFIX","dataAttr","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","setAttribute","reset","removeContainerStyle","removeAttribute","add","modal","modalIdx","isTopModal","Context","createContext","useWindow","resolveContainerRef","getBoundingClientRect","isReactNative","product","useLayoutEffect","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","child","cloneElement","ImperativeTransition","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","useTransition","resolve","then","renderTransition","runTransition","_excluded","manager","useModalManager","provided","modalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","excluded","sourceKeys","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","mounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","appear","backdropElement","onClick","displayName","Manager","toArray","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","dataset","restore","classList","baseVal","hasClass","marginProp","el","sharedManager","getSharedManager","_setPrototypeOf","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","subClass","superClass","_this","initialStatus","isMounting","enter","appearStatus","nextCallback","create","getDerivedStateFromProps","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","scrollTop","forceReflow","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onTransitionEnd","_this3","cancel","nextState","callback","setNextCallback","_this4","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","_this$props","childProps","TransitionGroupContext","noop","contextType","propTypes","transitionEndListener","delay","triggerBrowserReflow","offsetHeight","childRef","mergedRef","attachRef","componentOrElement","normalize","param","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleAddEndListener","innerProps","fadeStyles","Fade","transitionClasses","isAppearing","rHyphen","pascalCase","toUpperCase","chr","createWithBsPrefix","BsComponent","bsPrefix","as","Tag","componentProps","resolvedPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","variant","CloseButton","ariaLabel","AbstractModalHeader","closeLabel","closeVariant","closeButton","handleClick","ModalHeader","divWithClassName","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useIsRTL","modalContext","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","backdropProps","baseModalStyle","display","preventDefault","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","owluiCloseButton","owluiDarkBackground","owluiFooter","owluiModalContainer","owluiModalHeader","ErrorModal","showModal","setShowModal","modalErrorId","setModalErrorId","modalError","setModalError","modalErrorStack","setModalErrorStack","themePrefixes","toggleModal","ev","errorEvent","detail","substring","handleConnectionError","errorObject","darkBackground","modalContainer","modalDialog","ui","icon","footer","owluiPreviewButton","owluiPreviewPanel","useButtonProps","tagName","disabled","href","rel","trim","isTrivialHref","stopPropagation","onKeyDown","Button","asProp","buttonProps","matchersByWindow","WeakMap","getMatcher","query","targetWindow","matchers","Map","set","mql","matchMedia","refCount","media","useMediaQuery","_useState","setMatches","handleChange","addListener","removeListener","delete","breakpointValues","names","and","next","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","_breakpointMap","createBreakpointHook","xs","sm","md","lg","xl","xxl","transitionStyles","OffcanvasToggling","OffcanvasHeader","Offcanvas","placement","responsive","scroll","renderStaticNode","onToggle","NavbarContext","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","visibility","OffcanvasBody","OffcanvasTitle","formatResponse","response","completion_status","completion_threshold","credit","launch_data","learner_id","learner_name","max_time_allowed","mode","progress_measure","scaled_passing_score","success_status","suspend_data","time_limit_action","total_time","parsedLocation","Preview","setShow","GetValue","querySelector","textContent","previewButton","previewPanel","Link","absoluteHref","reloadDocument","preventScrollReset","isExternal","currentUrl","targetUrl","protocol","origin","_temp","joinedPathname","useHref","internalOnClick","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","owluiLesson","owluiLessonWrapper","owluiNavbar","owluiNavbarLight","owluiNextLessonContainer","scrowlPlayer","makeEventKey","eventKey","String","defaultKey","_toPropertyKey","input","hint","prim","toPrimitive","res","TypeError","Number","_toPrimitive","useUncontrolled","fieldName","_extends2","defaultValue","propsValue","handlerName","_useUncontrolledProp","propValue","wasPropRef","stateValue","isProp","wasProp","useUncontrolledProp","componentWillMount","componentWillReceiveProps","nextProps","componentWillUpdate","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","__suppressDeprecationWarning","NavbarBrand","funcs","acc","MARGINS","getDefaultDimensionValue","dimension","elem","margins","collapseStyles","getDimensionValue","computedDimension","NavbarCollapse","expanded","NavbarToggle","label","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","bg","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","Brand","Collapse","Text","Toggle","Container","fluid","suffix","$704cf1d3b684cc5c$var$defaultContext","round","isSSR","$704cf1d3b684cc5c$var$SSRContext","$704cf1d3b684cc5c$var$canUseDOM","Boolean","$704cf1d3b684cc5c$var$componentIds","$704cf1d3b684cc5c$var$useCounter","isDisabled","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","currentOwner","prevComponentValue","memoizedState","useTabPanel","isActive","activeKey","getControlledId","getControllerId","TabPanel","tabPanelProps","hidden","Tabs","userId","generateChildId","generateCustomChildId","propsOnSelect","propsActiveKey","defaultActiveKey","defaultId","counter","tabContext","Panel","NavContext","useNavItem","parentOnSelect","navContext","contextControllerId","contextControlledId","isPropagationStopped","NavItem","EVENT_KEY_ATTR","Nav","forceUpdate","useReducer","needsRefocusRef","listNode","getNextActiveTab","offset","currentListNode","items","activeChild","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","navItemProps","uncontrolledProps","fill","justify","navbar","navbarScroll","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","cardHeaderContext","CardHeaderContext","getTabTransitionComponent","TabPane","getDefaultActiveKey","renderTab","title","tabClassName","tabAttrs","TabContent","TabContainer","Tab","Content","owluiButtonContainer","owluiClear","owluiDefinition","owluiGlossaryTerm","owluiIcon","owluiIconExpanded","owluiLessonButton","owluiLessonIcon","owluiLessonIconActive","owluiLessonLink","owluiLessonLinkActive","owluiLessonList","owluiModuleButton","owluiModuleLessons","owluiModuleNameActive","owluiNavButton","owluiNavGlossary","owluiNavItem","owluiNavResources","owluiOutlineDuration","owluiOutlineFooter","owluiOutlineOffcanvas","owluiOutlineSubtitle","owluiResourceContainer","owluiResourceDescription","owluiResourceName","owluiResourceTitle","owluiSearchBar","owluiSearchTerm","owluiTabContent","owluiTabsContainer","owluiTitleContainer","owluiWord","NavModule","pageId","mIdx","Scrowl","currentSlide","moduleSlides","_i","isOpen","setOpen","moduleButton","Icon","iconExpanded","moduleNameActive","moduleNameExpanded","moduleName","lessonList","lIdx","url","lessonName","lessonButton","lessonIconActive","lessonIcon","lessonLinkActive","lessonLink","NavResource","resource","resourceContainer","filename","resourceName","resourceDescription","description","SearchBar","searchTerm","setSearchTerm","confirmedSearchTerm","setConfirmedSearchTerm","doSearch","clearSearch","blur","searchBar","placeholder","onChange","clear","Highlight","color","caseIgnored","splitMatch","values","matched","item","idx","NavGlossary","filteredTerms","setFilteredTerms","sortedGlossary","textA","word","textB","letterTerms","glossaryTerm","term","termLetter","letters","terms","dictTermList","highlighter","navGlossary","NavBar","project","tabKey","setTabKey","template","currentIndex","rootMargin","threshold","introObserver","IntersectionObserver","finalSlideObserver","introSlide","lastSlide","observe","navButton","tabsContainer","tab","outlineOffcanvas","titleContainer","outlineSubtitle","outlineDuration","moduleLessons","targets","scrollSlide","runtime","API","suspendData","getSuspendData","parsedData","courseStarted","matchingId","targetIndex","targetElement","find","t","innerText","scrollIntoView","currentSlideEvent","CustomEvent","outlineFooter","buttonContainer","resourceTitle","navResources","Page","templates","slideId","hasStartedCourse","setHasStartedCourse","log","_courseStartError","controller","core","Controller","targetID","handleArrowKeys","slidesObserver","isIntersecting","targetElements","scrollTo","destroy","_ev","Template","schema","finishCourse","finish","SetValue","templateList","data","page","nextLessonUrl","nextLessonId","nextLessonText","Element","Suspense","fallback","notScene","nextLessonContainer","lessonsArray","lessonObj","targetId","currentLesson","currentLessonIndex","totalLessons","percentageCompleted","updateProgress","updateCourseProgress","Pages","owluiHintText","owluiIconScroll","owluiScrollHint","visible","ScrollHint","setVisible","noticeVisible","setNoticeVisible","busy","setBusy","secondsSinceIdle","onScroll","updateBusy","hide","checkIdleStatus","showNotice","setInterval","scrollHint","hintText","iconScroll","Root","scorm","apiPreference","showPanel","_setShowPanel","outputFormat","Scorm2004API","authors","initialData","loadFromJSON","Initialize","isStarted","start","moduleIdx","lessonIdx","locationError","getLocation","cur","pages","handleSlideEnter","sceneEvent","previousLocation","locationObj","keyPair","updateLocation","handleSlideStart","handleSlideEnd","handleSlideLeave","getError","onLine","onlineEvent","on","player"],"sourceRoot":""}