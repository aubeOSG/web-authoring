"use strict";(self.webpackChunk_scrowl_player=self.webpackChunk_scrowl_player||[]).push([[37],{37:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(393);\n\n\nconst Page = ({ slides, templates, slideId, ...props }) => {\n    const Scrowl = window['Scrowl'];\n    const [hasStartedCourse, setHasStartedCourse] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    if (Scrowl &&\n        Scrowl.runtime &&\n        Scrowl.runtime.API !== null &&\n        hasStartedCourse !== false) {\n        const [_courseStartError, suspendData] = Scrowl.runtime.getSuspendData();\n        const parsedData = JSON.parse(suspendData);\n        if (\n        // @ts-ignore\n        !Object.entries(parsedData).length > 0 ||\n            (parsedData &&\n                parsedData.courseStarted &&\n                parsedData.courseStarted !== true)) {\n            setHasStartedCourse(false);\n        }\n    }\n    const controller = new Scrowl.core.scroll.Controller();\n    let currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n    let currentIndex = 0;\n    const targets = slides?.map((slide) => {\n        return `module-${slide.moduleId}--lesson-${slide.lessonId}--slide-${slide.id}-${slide.template.meta.filename}`;\n    });\n    const handleArrowKeys = (ev) => {\n        if (Scrowl && Scrowl.runtime) {\n            if (Scrowl.runtime.API !== null) {\n                const [error, suspendData] = Scrowl.runtime.getSuspendData();\n                if (suspendData === '{}') {\n                    return;\n                }\n                else {\n                    const parsedData = JSON.parse(suspendData);\n                    if (error || !parsedData.courseStarted) {\n                        return;\n                    }\n                }\n            }\n        }\n        let matchingId;\n        if (targets && currentSlide !== 'owlui-last') {\n            matchingId = targets.find((t) => {\n                return t === currentSlide;\n            });\n        }\n        else {\n            currentIndex = targets.length;\n        }\n        if (matchingId) {\n            currentIndex = targets?.indexOf(matchingId);\n        }\n        let targetID;\n        let targetElement;\n        switch (ev.key) {\n            case 'ArrowLeft':\n                if (currentIndex === 1) {\n                    targetID = targets[0];\n                    targetElement = document.querySelector(`#${targetID}`);\n                    currentIndex = 0;\n                    currentSlide = `module-${slides[0].moduleId}--lesson-${slides[0].lessonId}--slide-${slides[0].id}-${slides[0].template.meta.filename}`;\n                    setTimeout(() => {\n                        targetElement?.scrollIntoView(false);\n                    }, 0);\n                }\n                else {\n                    targetID = targets[currentIndex - 1];\n                    targetElement = document.querySelector(`#${targetID}`);\n                    setTimeout(() => {\n                        targetElement?.scrollIntoView(false);\n                    }, 0);\n                }\n                break;\n            case 'ArrowRight':\n                if (currentIndex + 1 === targets.length) {\n                    targetElement = document.querySelector('.owlui-last');\n                    setTimeout(() => {\n                        targetElement?.scrollIntoView(true);\n                    }, 0);\n                    currentSlide = 'owlui-last';\n                }\n                else {\n                    targetID = targets[currentIndex + 1];\n                    targetElement = document.querySelector(`#${targetID}`);\n                    setTimeout(() => {\n                        targetElement?.scrollIntoView(true);\n                    }, 0);\n                }\n                break;\n        }\n        const currentSlideObj = {\n            currentIndex: currentIndex,\n            currentSlide: currentSlide,\n        };\n        const currentSlideEvent = new CustomEvent('CurrentSlidePageUpdate', {\n            detail: currentSlideObj,\n        });\n        document.dispatchEvent(currentSlideEvent);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const handleSlideEvent = (ev) => {\n            currentSlide = ev.detail.currentTarget.id;\n        };\n        const handleUpdateSlideEvent = (ev) => {\n            currentSlide = ev.detail.currentSlide;\n        };\n        window.addEventListener('keydown', (e) => {\n            if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n                handleArrowKeys(e);\n            }\n        });\n        document.addEventListener('CurrentSlideNavUpdate', handleUpdateSlideEvent);\n        document.addEventListener('slide.enter', handleSlideEvent);\n        let options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.8,\n        };\n        const slidesObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting === true) {\n                    currentSlide = entry.target.id;\n                }\n            });\n        });\n        const finalSlideObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting === true) {\n                    currentSlide = 'owlui-last';\n                }\n            });\n        }, options);\n        let lastSlide = document.querySelector('.owlui-last');\n        if (lastSlide) {\n            finalSlideObserver.observe(lastSlide);\n        }\n        const targetElements = targets.map((target) => {\n            return document.querySelector(`#${target}`);\n        });\n        targetElements.forEach((element) => {\n            if (element) {\n                slidesObserver.observe(element);\n            }\n        });\n    }, [slides]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (slideId && slideId?.length > 0) {\n            document.querySelector(`#${slideId}`)?.scrollIntoView();\n        }\n        else {\n            window.scrollTo({ top: 0 });\n        }\n    }, [slides]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        return () => {\n            controller.destroy(true);\n        };\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const handleCourseStart = (_ev) => {\n            setHasStartedCourse(true);\n        };\n        document.addEventListener('startCourse', handleCourseStart);\n    }, []);\n    if (!hasStartedCourse) {\n        const id = `${props.id}--slide-${slides[0].id}`;\n        const component = slides[0].template.meta.component;\n        const Template = templates[component];\n        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Template, { key: 1, id: id, schema: slides[0].template, controller: controller, slides: slides[0] }));\n    }\n    else {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, slides.map((slide, idx) => {\n            const id = `${props.id}--slide-${slide.id}`;\n            const component = slide.template.meta.component;\n            if (!templates.hasOwnProperty(component)) {\n                return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Error, { msg: `Unabled to find template: ${component}` });\n            }\n            const Template = templates[component];\n            return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Template, { key: idx, id: id, schema: slide.template, controller: controller, slides: slides }));\n        })));\n    }\n};\n\n\n\n//# sourceURL=webpack://@scrowl/player/./src/services/pages/page.tsx?")}}]);