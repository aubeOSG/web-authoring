!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var o in i)("object"==typeof exports?exports:e)[o]=i[o]}}(self,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t);const i={init:!1,finished:!1,_time:{startTime:void 0,getSessionTime:()=>{let e;return i._time.startTime&&(e=(new Date).getTime()-i._time.startTime.getTime()),i._time.convert(e)},end:void 0,convert:e=>{function t(e,t){let i=new String(e);const o=i.length;if(o>t)return i.substr(0,t);for(let e=o;e<t;e++)i="0"+i;return i}let i=e%1e3,o=(e-i)/1e3%60,n=(e-i-1e3*o)/6e4%60,s=(e-i-1e3*o-6e4*n)/36e5;1e4==s&&(s=9999,n=(e-36e5*s)/6e4,100==n&&(n=99),n=Math.floor(n),o=(e-36e5*s-6e4*n)/1e3,100==o&&(o=99),o=Math.floor(o),i=e-36e5*s-6e4*n-1e3*o);let r=t(s,4)+":"+t(n,2)+":"+t(o,2);return s>9999&&(r="9999:99:99"),r}},nFindAPITries:0,API:null,maxTries:500,scanForAPI:e=>{for(;null==e.API_1484_11&&null!=e.parent&&e.parent!=e;){if(i.nFindAPITries++,i.nFindAPITries>i.maxTries)return null;e=e.parent}return e.API_1484_11},getAPI:e=>{null!=e.parent&&e.parent!=e&&(i.API=i.scanForAPI(e.parent)),null==i.API&&null!=e.opener&&(i.API=i.scanForAPI(e.opener))},getError:e=>{e=null==e||e;const t=i.isAvailable();if(t.error)return t;const o=t.API.GetLastError(),n={id:o,message:t.API.GetErrorString(o),stack:t.API.GetDiagnostic(o)};return e&&console.error(`Error:\n${JSON.stringify(n,null,2)}`),{error:!1,data:n}},commit:()=>{console.debug("API.Commit");const[e,t]=i.isInitialized();return e&&t?(i.setValue("cmi.session_time",i._time.getSessionTime()),t.Commit(""),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},exit:()=>(console.debug("API.Exit"),i.commit()),isInitialized:()=>(console.debug("API.Initialize()"),i.init=!1,i.API?"false"===i.API.Initialized?(console.error("API failed to initialize"),[i.init,!1]):(i.init=!0,[i.init,i.API]):(console.error("MISSING_SCORM_API - INIT"),[i.init,!1])),updateLocation:(e,t)=>{console.log("API.UpdateLocation"),console.log(e);const[o,n]=i.isInitialized();return o&&n?(i.setValue("cmi.location",JSON.stringify({v1:1,...e,slideId:t})),i.commit(),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},getLocation:()=>{console.debug("API.GetLocation");const[e,t]=i.isInitialized();if(!e||!t)return console.warn("Unable to get location: service not initialized"),[!0,{}];try{const[e,t]=i.getValue("cmi.location");return e||!t?[!0,{}]:[!1,JSON.parse(t)]}catch(e){return console.error(e),[!0,{}]}},getProgress:()=>{console.debug("API.GetProgress");const[e,t]=i.isInitialized();if(!e||!t)return console.warn("Unable to get progress: service not initialized"),[!0,{}];try{const[e,t]=i.getValue("cmi.progress_measure");return e||!t?[!0,{}]:[!1,t]}catch(e){return console.error(e),[!0,{}]}},updateProgress:e=>{console.log("API.UpdateProgress");const[t,o]=i.isInitialized();if(!t||!o)return console.warn("Unable to update progress: service not initialized"),[!0];const[n,s]=i.getValue("cmi.progress_measure");return n||((!s||0===parseFloat(s)||e>parseFloat(s))&&i.setValue("cmi.progress_measure",e),i.commit()),[!1]},start:()=>{console.debug("API.Start"),i._time.startTime=new Date,i.getAPI(window),i.API?.Initialize("");const[e,t]=i.isInitialized();if(!e||!t)return[!0];const[o,n]=i.getValue("cmi.completion_status");return o?[!0]:("unknown"===n?(i.setValue("cmi.completion_status","incomplete"),i.setValue("cmi.success_status","unknown"),i.setValue("cmi.suspend_data","{}")):(i.setValue("cmi.score.scaled",i.getValue("cmi.score.scaled")[1]),i.setValue("cmi.score.raw",i.getValue("cmi.score.raw")[1]),i.setValue("cmi.success_status",i.getValue("cmi.success_status")[1]),i.setValue("cmi.progress_measure",i.getValue("cmi.progress_measure")[1]),i.setValue("cmi.completion_status",i.getValue("cmi.completion_status")[1])),i.setValue("cmi.exit","suspend"),i.commit(),console.log("runtime started"),[!1])},finish:()=>{console.debug("API.Finish");const[e,t]=i.isInitialized();return e&&t?(i.setValue("cmi.score.min",0),i.setValue("cmi.score.max",100),i.setValue("cmi.score.scaled",1),i.setValue("cmi.score.raw",100),i.setValue("cmi.success_status","passed"),i.setValue("cmi.progress_measure",1),i.setValue("cmi.completion_status","completed"),i.commit(),t.Terminate(""),[!1]):(console.warn("Unable to finish: service not initialized"),[!0])},setValue:(e,t)=>{console.debug(`API.SetValue for ${e} to ${t}`);const[o,n]=i.isInitialized();return o&&n?(void 0!==t?n.SetValue(e,t):console.warn(`Unable to set value for ${e}: value undefined`),[!1]):(console.warn(`Unable to set value for ${e}: service not initialized`),[!0])},getValue:e=>{console.debug(`API.GetValue for ${e}`);const[t,o]=i.isInitialized();if(!t||!o)return console.warn(`Unable to set value for ${e}: service not initialized`),[!0,""];const n=o.GetValue(e);return"false"===n?(console.error(`API failed to get value for: ${e}`),[!0,""]):[!1,n]}};return window.Scrowl=window.Scrowl||{},window.Scrowl.runtime=i,t})()));
//# sourceMappingURL=scrowl.runtime.js.map