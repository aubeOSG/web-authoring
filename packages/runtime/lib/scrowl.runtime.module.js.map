{"mappings":";;;;;;;;AAAA;;;;;;;AEUO,MAAM,yCAAO,GAAoB;IACtC,IAAI,EAAE,KAAK;IACX,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE;QACL,SAAS,EAAE,SAAS;QACpB,cAAc,EAAE,IAAM;YACpB,IAAI,WAAW,AAAC;YAChB,IAAI,yCAAO,CAAC,KAAK,CAAC,SAAS,EACzB,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,yCAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAEzE,OAAO,yCAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC3C;QACD,GAAG,EAAE,SAAS;QACd,OAAO,EAAE,CAAC,KAAK,GAAK;YAClB,aAAa;YACb,SAAS,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE;gBACzC,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,AAAC;gBAC1B,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,AAAC;gBAEvB,IAAI,GAAG,GAAG,GAAG,EACX,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gBAG5B,IAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAC5B,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAGlB,OAAO,GAAG,CAAC;aACZ;YAED,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI,AAAC;YAC3B,IAAI,MAAM,GAAG,AAAE,CAAA,KAAK,GAAG,OAAO,CAAA,GAAI,IAAI,GAAI,EAAE,AAAC;YAC7C,IAAI,MAAM,GAAG,AAAE,CAAA,KAAK,GAAG,OAAO,GAAG,MAAM,GAAG,IAAI,CAAA,GAAI,KAAK,GAAI,EAAE,AAAC;YAC9D,IAAI,MAAM,GAAG,AAAC,CAAA,KAAK,GAAG,OAAO,GAAG,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,KAAK,CAAA,GAAI,OAAO,AAAC;YAE1E,IAAI,MAAM,IAAI,KAAK,EAAE;gBACnB,MAAM,GAAG,IAAI,CAAC;gBACd,MAAM,GAAG,AAAC,CAAA,KAAK,GAAG,MAAM,GAAG,OAAO,CAAA,GAAI,KAAK,CAAC;gBAE5C,IAAI,MAAM,IAAI,GAAG,EACf,MAAM,GAAG,EAAE,CAAC;gBAGd,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC5B,MAAM,GAAG,AAAC,CAAA,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,KAAK,CAAA,GAAI,IAAI,CAAC;gBAE5D,IAAI,MAAM,IAAI,GAAG,EACf,MAAM,GAAG,EAAE,CAAC;gBAGd,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC5B,OAAO,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;aACrE;YAED,oEAAoE;YACpE,IAAI,QAAQ,GACV,IAAI,GACJ,MAAM,GACN,uBAAuB;YACvB,GAAG,GACH,MAAM,GACN,uBAAuB;YACvB,GAAG,GACH,MAAM,GACN,uBAAuB;YACvB,GAAG,AAAC;YAEN,IAAI,MAAM,GAAG,IAAI,EACf,QAAQ,GAAG,YAAY,CAAC;YAG1B,OAAO,QAAQ,CAAC;SACjB;KACF;IACD,aAAa,EAAE,CAAC;IAChB,aAAa;IACb,GAAG,EAAE,IAAI;IACT,QAAQ,EAAE,GAAG;IACb,YAAY;IACZ,UAAU,EAAE,CAAC,GAAG,GAAK;QACnB,MAAO,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAE;YACzE,yCAAO,CAAC,aAAa,EAAE,CAAC;YAExB,IAAI,yCAAO,CAAC,aAAa,GAAG,yCAAO,CAAC,QAAQ,EAC1C,OAAO,IAAI,CAAC;YAGd,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;SAClB;QAED,OAAO,GAAG,CAAC,WAAW,CAAC;KACxB;IACD,MAAM,EAAE,CAAC,GAAG,GAAK;QACf,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EACzC,aAAa;QACb,yCAAO,CAAC,GAAG,GAAG,yCAAO,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAG/C,IAAI,yCAAO,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAC3C,aAAa;QACb,yCAAO,CAAC,GAAG,GAAG,yCAAO,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAEhD;IACD,QAAQ,EAAE,CAAC,UAAU,GAAK;QACxB,UAAU,GACR,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC;QAEtE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,EACT,OAAO;YACL,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,4BAA4B;SACtC,CAAC;QAGJ,MAAM,OAAO,GAAG,GAAG,CAAC,YAAY,EAAE,AAAC;QACnC,MAAM,QAAQ,GAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,AAAC;QAC7C,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;QAC9C,MAAM,QAAQ,GAAG;YACf,EAAE,EAAE,OAAO;YACX,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,UAAU;SAClB,AAAC;QAEF,IAAI,UAAU,EACZ,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGhE,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,QAAQ;SACf,CAAC;KACH;IACD,MAAM,EAAE,IAAM;QACZ,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;YAChE,OAAO;gBAAC,IAAI;aAAC,CAAC;SACf;QAED,yCAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,yCAAO,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;QACrE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACf,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,IAAI,EAAE,IAAM;QACV,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1B,OAAO,yCAAO,CAAC,MAAM,EAAE,CAAC;KACzB;IACD,aAAa,EAAE,IAAM;QACnB,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAClC,yCAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,yCAAO,CAAC,GAAG,EAAE;YAChB,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAC1C,OAAO;gBAAC,yCAAO,CAAC,IAAI;gBAAE,KAAK;aAAC,CAAC;SAC9B;QAED,aAAa;QACb,IAAI,yCAAO,CAAC,GAAG,CAAC,WAAW,KAAK,OAAO,EAAE;YACvC,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAC1C,OAAO;gBAAC,yCAAO,CAAC,IAAI;gBAAE,KAAK;aAAC,CAAC;SAC9B;QAED,yCAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO;YAAC,yCAAO,CAAC,IAAI;YAAE,yCAAO,CAAC,GAAG;SAAC,CAAC;KACpC;IACD,wBAAwB;IACxB,cAAc,EAAE,CAAC,QAAQ,EAAE,OAAO,GAAK;QACrC,OAAO,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvB,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;YAChE,OAAO;gBAAC,IAAI;aAAC,CAAC;SACf;QAED,yCAAO,CAAC,QAAQ,CACd,cAAc,EACd,IAAI,CAAC,SAAS,CAAC;YAAE,EAAE,EAAE,CAAC;YAAE,GAAG,QAAQ;YAAE,OAAO,EAAE,OAAO;SAAE,CAAC,CACzD,CAAC;QAEF,yCAAO,CAAC,MAAM,EAAE,CAAC;QACjB,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,WAAW,EAAE,IAAM;QACjB,OAAO,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;YAChE,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;SACnB;QACD,iCAAiC;QACjC,IAAI;YACF,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,yCAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,AAAC;YAE3D,IAAI,KAAK,IAAI,CAAC,QAAQ,EACpB,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;YAGpB,OAAO;gBAAC,KAAK;gBAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAAC,CAAC;SACtC,CAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;SACnB;KACF;IACD,WAAW,EAAE,IAAM;QACjB,OAAO,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;YAChE,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;SACnB;QAED,IAAI;YACF,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,yCAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC,AAAC;YAEnE,IAAI,KAAK,IAAI,CAAC,QAAQ,EACpB,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;YAGpB,OAAO;gBAAC,KAAK;gBAAE,QAAQ;aAAC,CAAC;SAC1B,CAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;SACnB;KACF;IACD,cAAc,EAAE,CAAC,kBAAkB,GAAK;QACtC,OAAO,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;YACnE,OAAO;gBAAC,IAAI;aAAC,CAAC;SACf;QAED,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,yCAAO,CAAC,QAAQ,CACxD,sBAAsB,CACvB,AAAC;QAEF,qFAAqF;QACrF,aAAa;QACb,IAAI,aAAa,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;YACvD,yCAAO,CAAC,QAAQ,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;YAC7D,yCAAO,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,aAAa,EAAE;YAClB,IACE,CAAC,gBAAgB,IACjB,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAClC,kBAAkB,GAAG,UAAU,CAAC,gBAAgB,CAAC,EAEjD,yCAAO,CAAC,QAAQ,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;YAE/D,yCAAO,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,KAAK,EAAE,IAAM;QACX,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3B,yCAAO,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACrC,yCAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvB,yCAAO,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;QAE5B,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EACjB,OAAO;YAAC,IAAI;SAAC,CAAC;QAGhB,MAAM,CAAC,WAAW,EAAE,gBAAgB,CAAC,GAAG,yCAAO,CAAC,QAAQ,CACtD,uBAAuB,CACxB,AAAC;QAEF,IAAI,WAAW,EACb,OAAO;YAAC,IAAI;SAAC,CAAC;QAGhB,IAAI,gBAAgB,KAAK,SAAS,EAAE;YAClC,yCAAO,CAAC,QAAQ,CAAC,uBAAuB,EAAE,YAAY,CAAC,CAAC;YACxD,yCAAO,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;YAClD,yCAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;SAC5C,MAAM;YACL,yCAAO,CAAC,QAAQ,CACd,kBAAkB,EAClB,yCAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC;YACF,yCAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,yCAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,yCAAO,CAAC,QAAQ,CACd,oBAAoB,EACpB,yCAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;YACF,yCAAO,CAAC,QAAQ,CACd,sBAAsB,EACtB,yCAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAC5C,CAAC;YACF,yCAAO,CAAC,QAAQ,CACd,uBAAuB,EACvB,yCAAO,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAC7C,CAAC;SACH;QAED,0JAA0J;QAC1J,yCAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACxC,yCAAO,CAAC,MAAM,EAAE,CAAC;QAEjB,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEhC,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,MAAM,EAAE,IAAM;QACZ,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,yCAAyC,CAAC,CAAC,CAAC;YAC1D,OAAO;gBAAC,IAAI;aAAC,CAAC;SACf;QAED,yCAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACrC,yCAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACvC,yCAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QACxC,yCAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACvC,yCAAO,CAAC,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;QACjD,yCAAO,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;QAC5C,yCAAO,CAAC,QAAQ,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;QACvD,yCAAO,CAAC,MAAM,EAAE,CAAC;QACjB,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAElB,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,QAAQ,EAAE,CAAC,IAAI,EAAE,GAAG,GAAK;QACvB,OAAO,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAEpD,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACzE,OAAO;gBAAC,IAAI;aAAC,CAAC;SACf;QAED,IAAI,GAAG,KAAK,SAAS,EACnB;YAAA,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,OAAO,EACrC,yCAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvB,yCAAyC;SAC1C,MAED,OAAO,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAGnE,OAAO;YAAC,KAAK;SAAC,CAAC;KAChB;IACD,QAAQ,EAAE,CAAC,IAAI,GAAK;QAClB,OAAO,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE1C,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,yCAAO,CAAC,aAAa,EAAE,AAAC;QAE9C,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACzE,OAAO;gBAAC,IAAI;gBAAE,EAAE;aAAC,CAAC;SACnB;QAED,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,AAAC;QAElC,IAAI,MAAM,KAAK,EAAE,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACtD,yCAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,OAAO;YAAC,KAAK;YAAE,MAAM;SAAC,CAAC;KACxB;CACF,AAAC;IAEF,wCAEC,GAFc;aACb,yCAAO;CACR;","sources":["packages/runtime/src/index.ts","packages/runtime/src/runtime.types.ts","packages/runtime/src/runtime.ts"],"sourcesContent":["export * from './runtime.types';\nexport * from './runtime';\n","export type CMIElement = string;\nexport type CMIElementValue = string | number | undefined;\nexport type CMIErrorCode = string;\nexport type SCORM_STATUS_UPDATE = 'true' | 'false';\nexport type SCORM_STATUS_LESSON = 'success' | 'failed' | 'done' | 'active' | 'viewed' | 'unseen';\nexport type SCORM_STATUS_EXIT = 'timeout' | 'save' | 'logout'\n\nexport type SCORM_API = {\n  Commit: (msg?: string) => SCORM_STATUS_UPDATE;\n  GetDiagnostic: (errorCode: CMIErrorCode) => string;\n  GetErrorString: (errorCode: CMIErrorCode) => string;\n  GetLastError: () => CMIErrorCode;\n  GetValue: (element: CMIElement) => string;\n  Initialize: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSCommit: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSFinish: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSGetDiagnostic: (errorCode: CMIErrorCode) => string;\n  LMSGetErrorString: (errorCode: CMIErrorCode) => string;\n  LMSGetLastError: () => CMIErrorCode;\n  LMSGetValue: (element: CMIElement) => string;\n  LMSInitialize: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSSetValue: (element: CMIElement, value: string | number) => string;\n  SetValue: (element: CMIElement, value: string | number) => string;\n  Terminate: (msg?: string) => SCORM_STATUS_UPDATE;\n  apolloClient: {\n    [key: string]: any;\n  };\n  checkCompletion_1_2: () => void;\n  checkCompletion_2004: () => void;\n  deflateString: () => void;\n  failed_1_2: () => void;\n  failed_2004: () => void;\n  inflateString: () => void;\n  moduleId: string;\n  mutate: () => void;\n  onFailure: () => void;\n  onSuccess: () => void;\n  passed_1_2: () => void;\n  passed_2004: () => void;\n  scormData: {\n    [key: string]: string | boolean | number;\n  };\n  trainSessionId: string;\n};\n\nexport type GENERIC_DATA = {\n  [key: string]: any;\n};\n\nexport interface RUNTIME_SERVICE_API_RESULT_READY {\n  error: false;\n  API: SCORM_API;\n}\n\nexport interface RUNTIME_SERVICE_API_RESULT_ERROR {\n  error: true;\n  message: string;\n}\n\nexport type RUNTIME_SERVICE_API_RESULT =\n  | RUNTIME_SERVICE_API_RESULT_READY\n  | RUNTIME_SERVICE_API_RESULT_ERROR;\n\nexport type RUNTIME_SERVICE_RESULT = {\n  error: boolean;\n  message?: string;\n  data?: string | GENERIC_DATA;\n};\n\nexport type RUNTIME_SERVICE = {\n  API?: SCORM_API | null;\n  init: boolean;\n  finished: boolean;\n  _time: {\n    startTime: undefined | Date;\n    end: undefined | Date;\n    getSessionTime: () => string;\n    convert: (total: number) => string;\n  };\n  nFindAPITries: number;\n  maxTries: 500;\n  getAPI: (window: Window) => void;\n  commit: () => [error: boolean];\n  exit: () => [error: boolean];\n  isInitialized: () =>\n    | [error: true, API: SCORM_API]\n    | [error: false, API: false];\n  start: () => [error: boolean];\n  updateLocation: (location: any, slideId: string) => [error: boolean];\n  updateProgress: (progressPercentage: number) => [error: boolean];\n  isAvailable: () => RUNTIME_SERVICE_API_RESULT;\n  getError: (printError?: boolean) => RUNTIME_SERVICE_RESULT;\n  getProgress: () => [error: boolean, progress: any];\n  getLocation: () => [error: boolean, location: any];\n  _findAPI: (source: Window) => RUNTIME_SERVICE_API_RESULT;\n  save: () => RUNTIME_SERVICE_RESULT;\n  stop: () => RUNTIME_SERVICE_RESULT;\n  setValue: (elem: CMIElement, val: CMIElementValue) => [error: boolean];\n  getValue: (elem: CMIElement) => [error: boolean, value: string];\n  updateStatus: (status: SCORM_STATUS_LESSON) => RUNTIME_SERVICE_RESULT;\n  finish: () => [error: boolean];\n};\n","/*\n  SCORM API REF\n  https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/\n*/\nimport { RUNTIME_SERVICE } from \"./runtime.types\";\n\n// const hasProp = (obj: {}, prop: string) => {\n//   return Object.prototype.hasOwnProperty.call(obj, prop);\n// };\n\nexport const service: RUNTIME_SERVICE = {\n  init: false,\n  finished: false,\n  _time: {\n    startTime: undefined,\n    getSessionTime: () => {\n      let sessionTime;\n      if (service._time.startTime) {\n        sessionTime = new Date().getTime() - service._time.startTime.getTime();\n      }\n      return service._time.convert(sessionTime);\n    },\n    end: undefined,\n    convert: (total) => {\n      // @ts-ignore\n      function ZeroPad(val: number, pad: number) {\n        let res = new String(val);\n        const len = res.length;\n\n        if (len > pad) {\n          return res.substr(0, pad);\n        }\n\n        for (let i = len; i < pad; i++) {\n          res = '0' + res;\n        }\n\n        return res;\n      }\n\n      let totalMs = total % 1000;\n      let totalS = ((total - totalMs) / 1000) % 60;\n      let totalM = ((total - totalMs - totalS * 1000) / 60000) % 60;\n      let totalH = (total - totalMs - totalS * 1000 - totalM * 60000) / 3600000;\n\n      if (totalH == 10000) {\n        totalH = 9999;\n        totalM = (total - totalH * 3600000) / 60000;\n\n        if (totalM == 100) {\n          totalM = 99;\n        }\n\n        totalM = Math.floor(totalM);\n        totalS = (total - totalH * 3600000 - totalM * 60000) / 1000;\n\n        if (totalS == 100) {\n          totalS = 99;\n        }\n\n        totalS = Math.floor(totalS);\n        totalMs = total - totalH * 3600000 - totalM * 60000 - totalS * 1000;\n      }\n\n      // should eventually check SCORM version and format time accordingly\n      let timespan =\n        'PT' +\n        totalH +\n        // ZeroPad(totalH, 4) +\n        'H' +\n        totalM +\n        // ZeroPad(totalM, 2) +\n        'M' +\n        totalS +\n        // ZeroPad(totalS, 2) +\n        'S';\n\n      if (totalH > 9999) {\n        timespan = '9999:99:99';\n      }\n\n      return timespan;\n    },\n  },\n  nFindAPITries: 0,\n  // @ts-ignore\n  API: null,\n  maxTries: 500,\n  //@ts-ignore\n  scanForAPI: (win) => {\n    while (win.API_1484_11 == null && win.parent != null && win.parent != win) {\n      service.nFindAPITries++;\n\n      if (service.nFindAPITries > service.maxTries) {\n        return null;\n      }\n\n      win = win.parent;\n    }\n\n    return win.API_1484_11;\n  },\n  getAPI: (win) => {\n    if (win.parent != null && win.parent != win) {\n      // @ts-ignore\n      service.API = service.scanForAPI(win.parent);\n    }\n\n    if (service.API == null && win.opener != null) {\n      // @ts-ignore\n      service.API = service.scanForAPI(win.opener);\n    }\n  },\n  getError: (printError) => {\n    printError =\n      printError === undefined || printError === null ? true : printError;\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit) {\n      return {\n        error: true,\n        message: 'Service is not initialized',\n      };\n    }\n\n    const errorId = API.GetLastError();\n    const errorMsg = API.GetErrorString(errorId);\n    const errorStack = API.GetDiagnostic(errorId);\n    const apiError = {\n      id: errorId,\n      message: errorMsg,\n      stack: errorStack,\n    };\n\n    if (printError) {\n      console.error(`Error:\\n${JSON.stringify(apiError, null, 2)}`);\n    }\n\n    return {\n      error: false,\n      data: apiError,\n    };\n  },\n  commit: () => {\n    console.debug(`API.Commit`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true];\n    }\n\n    service.setValue('cmi.session_time', service._time.getSessionTime());\n    API.Commit('');\n    return [false];\n  },\n  exit: () => {\n    console.debug('API.Exit');\n    return service.commit();\n  },\n  isInitialized: () => {\n    console.debug('API.Initialize()');\n    service.init = false;\n\n    if (!service.API) {\n      console.error('MISSING_SCORM_API - INIT');\n      return [service.init, false];\n    }\n\n    // @ts-ignore\n    if (service.API.Initialized === 'false') {\n      console.error('API failed to initialize');\n      return [service.init, false];\n    }\n\n    service.init = true;\n    return [service.init, service.API];\n  },\n  // { m: 1, l: 1, s?: 3 }\n  updateLocation: (location, slideId) => {\n    console.info(`API.UpdateLocation`);\n    console.info(location);\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true];\n    }\n\n    service.setValue(\n      'cmi.location',\n      JSON.stringify({ v1: 1, ...location, slideId: slideId })\n    );\n\n    service.commit();\n    return [false];\n  },\n  getLocation: () => {\n    console.debug(`API.GetLocation`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get location: service not initialized`);\n      return [true, {}];\n    }\n    // {m:1, l:1, s?:3} || {} || null\n    try {\n      const [error, location] = service.getValue('cmi.location');\n\n      if (error || !location) {\n        return [true, {}];\n      }\n\n      return [false, JSON.parse(location)];\n    } catch (e) {\n      console.error(e);\n      return [true, {}];\n    }\n  },\n  getProgress: () => {\n    console.debug(`API.GetProgress`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to get progress: service not initialized`);\n      return [true, {}];\n    }\n\n    try {\n      const [error, progress] = service.getValue('cmi.progress_measure');\n\n      if (error || !progress) {\n        return [true, {}];\n      }\n\n      return [false, progress];\n    } catch (e) {\n      console.error(e);\n      return [true, {}];\n    }\n  },\n  updateProgress: (progressPercentage) => {\n    console.info(`API.UpdateProgress`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to update progress: service not initialized`);\n      return [true];\n    }\n\n    const [progressError, previousProgress] = service.getValue(\n      'cmi.progress_measure'\n    );\n\n    // error 403 = Data Model Element Value Not Initialized (first time setting progress)\n    // @ts-ignore\n    if (progressError && previousProgress.data.id === '403') {\n      service.setValue('cmi.progress_measure', progressPercentage);\n      service.commit();\n    }\n\n    if (!progressError) {\n      if (\n        !previousProgress ||\n        parseFloat(previousProgress) === 0 ||\n        progressPercentage > parseFloat(previousProgress)\n      ) {\n        service.setValue('cmi.progress_measure', progressPercentage);\n      }\n      service.commit();\n    }\n\n    return [false];\n  },\n  start: () => {\n    console.debug(`API.Start`);\n    service._time.startTime = new Date();\n    service.getAPI(window);\n\n    service.API?.Initialize('');\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      return [true];\n    }\n\n    const [statusError, completionStatus] = service.getValue(\n      'cmi.completion_status'\n    );\n\n    if (statusError) {\n      return [true];\n    }\n\n    if (completionStatus === 'unknown') {\n      service.setValue('cmi.completion_status', 'incomplete');\n      service.setValue('cmi.success_status', 'unknown');\n      service.setValue('cmi.suspend_data', '{}');\n    } else {\n      service.setValue(\n        'cmi.score.scaled',\n        service.getValue('cmi.score.scaled')[1]\n      );\n      service.setValue('cmi.score.raw', service.getValue('cmi.score.raw')[1]);\n      service.setValue(\n        'cmi.success_status',\n        service.getValue('cmi.success_status')[1]\n      );\n      service.setValue(\n        'cmi.progress_measure',\n        service.getValue('cmi.progress_measure')[1]\n      );\n      service.setValue(\n        'cmi.completion_status',\n        service.getValue('cmi.completion_status')[1]\n      );\n    }\n\n    // until we have things hooked up to exit buttons/nav, set exit to 'suspend' as part of start() so that status persists whether the user finishes or exits\n    service.setValue('cmi.exit', 'suspend');\n    service.commit();\n\n    console.info('runtime started');\n\n    return [false];\n  },\n  finish: () => {\n    console.debug(`API.Finish`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to finish: service not initialized`);\n      return [true];\n    }\n\n    service.setValue('cmi.score.min', 0);\n    service.setValue('cmi.score.max', 100);\n    service.setValue('cmi.score.scaled', 1);\n    service.setValue('cmi.score.raw', 100);\n    service.setValue('cmi.success_status', 'passed');\n    service.setValue('cmi.progress_measure', 1);\n    service.setValue('cmi.completion_status', 'completed');\n    service.commit();\n    API.Terminate('');\n\n    return [false];\n  },\n  setValue: (elem, val) => {\n    console.debug(`API.SetValue for ${elem} to ${val}`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to set value for ${elem}: service not initialized`);\n      return [true];\n    }\n\n    if (val !== undefined) {\n      if (API.SetValue(elem, val) === 'false') {\n        service.getError(true);\n        // return [true, service.getError(true)];\n      }\n    } else {\n      console.warn(`Unable to set value for ${elem}: value undefined`);\n    }\n\n    return [false];\n  },\n  getValue: (elem) => {\n    console.debug(`API.GetValue for ${elem}`);\n\n    const [isInit, API] = service.isInitialized();\n\n    if (!isInit || !API) {\n      console.warn(`Unable to set value for ${elem}: service not initialized`);\n      return [true, ''];\n    }\n\n    const getRes = API.GetValue(elem);\n\n    if (getRes === '') {\n      console.error(`API failed to get value for: ${elem}`);\n      service.getError(true);\n    }\n\n    return [false, getRes];\n  },\n};\n\nexport default {\n  service,\n}\n"],"names":[],"version":3,"file":"scrowl.runtime.module.js.map"}