{"mappings":"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","sources":["packages/runtime/src/index.ts","packages/runtime/src/runtime.types.ts","packages/runtime/src/runtime.ts"],"sourcesContent":["export * from './runtime.types';\nexport * from './runtime';\n","export type CMIELement = string;\nexport type CMIErrorCode = string;\nexport type SCORM_STATUS_UPDATE = 'true' | 'false';\nexport type SCORM_STATUS_LESSON = 'success' | 'failed' | 'done' | 'active' | 'viewed' | 'unseen';\nexport type SCORM_STATUS_EXIT = 'timeout' | 'save' | 'logout'\n\nexport type SCORM_API = {\n  Commit: (msg?: string) => SCORM_STATUS_UPDATE;\n  GetDiagnostic: (errorCode: CMIErrorCode) => string;\n  GetErrorString: (errorCode: CMIErrorCode) => string;\n  GetLastError: () => CMIErrorCode;\n  GetValue: (element: CMIELement) => string;\n  Initialize: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSCommit: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSFinish: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSGetDiagnostic: (errorCode: CMIErrorCode) => string;\n  LMSGetErrorString: (errorCode: CMIErrorCode) => string;\n  LMSGetLastError: () => CMIErrorCode;\n  LMSGetValue: (element: CMIELement) => string;\n  LMSInitialize: (msg?: string) => SCORM_STATUS_UPDATE;\n  LMSSetValue: (element: CMIELement, value: string | number) => string;\n  SetValue: (element: CMIELement, value: string | number) => string;\n  Terminate: (msg?: string) => SCORM_STATUS_UPDATE;\n  apolloClient: {\n    [key: string]: any;\n  };\n  checkCompletion_1_2: () => void;\n  checkCompletion_2004: () => void;\n  deflateString: () => void;\n  failed_1_2: () => void;\n  failed_2004: () => void;\n  inflateString: () => void;\n  moduleId: string;\n  mutate: () => void;\n  onFailure: () => void;\n  onSuccess: () => void;\n  passed_1_2: () => void;\n  passed_2004: () => void;\n  scormData: {\n    [key: string]: string | boolean | number;\n  };\n  trainSessionId: string;\n};\n\nexport type GENERIC_DATA = {\n  [key: string]: any;\n};\n\nexport interface RUNTIME_SERVICE_API_RESULT_READY {\n  error: false;\n  API: SCORM_API;\n}\n\nexport interface RUNTIME_SERVICE_API_RESULT_ERROR {\n  error: true;\n  message: string;\n}\n\nexport type RUNTIME_SERVICE_API_RESULT =\n  | RUNTIME_SERVICE_API_RESULT_READY\n  | RUNTIME_SERVICE_API_RESULT_ERROR;\n\nexport type RUNTIME_SERVICE_RESULT = {\n  error: boolean;\n  message?: string;\n  data?: string | GENERIC_DATA;\n};\n\nexport type RUNTIME_SERVICE = {\n  API?: SCORM_API | null;\n  init: boolean;\n  finished: boolean;\n  _time: {\n    startTime: undefined | Date;\n    end: undefined | Date;\n    getSessionTime: () => string;\n    convert: (total: number) => string;\n  };\n  nFindAPITries: number;\n  maxTries: number;\n  getAPI: (window: Window) => void;\n  commit: () => void;\n  exit: () => void;\n  initialize: () => void;\n  start: () => { error: boolean };\n  updateLocation: (location: any, progressPercentage: number) => void;\n\n  isAvailable: () => RUNTIME_SERVICE_API_RESULT;\n  getError: (printError?: boolean) => RUNTIME_SERVICE_RESULT;\n  getLocation: () => any;\n  _findAPI: (source: Window) => RUNTIME_SERVICE_API_RESULT;\n  save: () => RUNTIME_SERVICE_RESULT;\n  stop: () => RUNTIME_SERVICE_RESULT;\n  setValue: (elem: CMIELement, val: string | number) => RUNTIME_SERVICE_RESULT;\n  getValue: (elem: CMIELement) => string;\n  updateStatus: (status: SCORM_STATUS_LESSON) => RUNTIME_SERVICE_RESULT;\n  updateProgress: (percentageCompleted: number) => void;\n  finish: () => void;\n};\n","/*\n  SCORM API REF\n  https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/\n*/\nimport { RUNTIME_SERVICE } from \"./runtime.types\";\n\n// const hasProp = (obj: {}, prop: string) => {\n//   return Object.prototype.hasOwnProperty.call(obj, prop);\n// };\n\nexport const service: RUNTIME_SERVICE = {\n  init: false,\n  finished: false,\n  _time: {\n    startTime: undefined,\n    getSessionTime: () => {\n      let sessionTime;\n      if (service._time.startTime) {\n        sessionTime = new Date().getTime() - service._time.startTime.getTime();\n      }\n      return service._time.convert(sessionTime);\n    },\n    end: undefined,\n    convert: (total) => {\n      function ZeroPad(val: number, pad: number) {\n        let res = new String(val);\n        const len = res.length;\n\n        if (len > pad) {\n          return res.substr(0, pad);\n        }\n\n        for (let i = len; i < pad; i++) {\n          res = '0' + res;\n        }\n\n        return res;\n      }\n\n      let totalMs = total % 1000;\n      let totalS = ((total - totalMs) / 1000) % 60;\n      let totalM = ((total - totalMs - totalS * 1000) / 60000) % 60;\n      let totalH = (total - totalMs - totalS * 1000 - totalM * 60000) / 3600000;\n\n      if (totalH == 10000) {\n        totalH = 9999;\n        totalM = (total - totalH * 3600000) / 60000;\n\n        if (totalM == 100) {\n          totalM = 99;\n        }\n\n        totalM = Math.floor(totalM);\n        totalS = (total - totalH * 3600000 - totalM * 60000) / 1000;\n\n        if (totalS == 100) {\n          totalS = 99;\n        }\n\n        totalS = Math.floor(totalS);\n        totalMs = total - totalH * 3600000 - totalM * 60000 - totalS * 1000;\n      }\n\n      let timespan =\n        ZeroPad(totalH, 4) +\n        ':' +\n        ZeroPad(totalM, 2) +\n        ':' +\n        ZeroPad(totalS, 2);\n\n      if (totalH > 9999) {\n        timespan = '9999:99:99';\n      }\n\n      return timespan;\n    },\n  },\n  nFindAPITries: 0,\n  // @ts-ignore\n  API: null,\n  maxTries: 500,\n  //@ts-ignore\n  scanForAPI: (win) => {\n    while (win.API_1484_11 == null && win.parent != null && win.parent != win) {\n      service.nFindAPITries++;\n      if (service.nFindAPITries > service.maxTries) {\n        return null;\n      }\n      win = win.parent;\n    }\n    return win.API_1484_11;\n  },\n  getAPI: (win) => {\n    if (win.parent != null && win.parent != win) {\n      //@ts-ignore\n      service.API = service.scanForAPI(win.parent);\n    }\n    if (service.API == null && win.opener != null) {\n      // @ts-ignore\n      service.API = service.scanForAPI(win.opener);\n    }\n  },\n  getError: (printError) => {\n    printError =\n      printError === undefined || printError === null ? true : printError;\n    const res = service.isAvailable();\n\n    if (res.error) {\n      return res;\n    }\n\n    const errorId = res.API.GetLastError();\n    const errorMsg = res.API.GetErrorString(errorId);\n    const errorStack = res.API.GetDiagnostic(errorId);\n    const apiError = {\n      id: errorId,\n      message: errorMsg,\n      stack: errorStack,\n    };\n\n    if (printError) {\n      console.error(`Error:\\n${JSON.stringify(apiError, null, 2)}`);\n    }\n\n    return {\n      error: false,\n      data: apiError,\n    };\n  },\n  commit: () => {\n    if (!service.API) {\n      throw 'MISSING_SCORM_API';\n    }\n\n    service.setValue('cmi.session_time', service._time.getSessionTime());\n\n    service.API.Commit('');\n\n    console.log('API.Commit()');\n    if (service.API.Commit('') === 'false') {\n      throw 'ERROR_COMMIT_SCORM_API';\n    }\n  },\n  exit: () => {\n    service.commit();\n  },\n  initialize: () => {\n    if (!service.API) {\n      throw 'MISSING_SCORM_API';\n    }\n    console.log('API.Initialize()');\n    if (service.API.Initialize('') === 'false') {\n      throw 'ERROR_INIT_SCORM_API';\n    }\n  },\n  // { m: 1, l: 1, s?: 3 }\n  updateLocation: (location, progressPercentage) => {\n    service.setValue(\n      'cmi.location',\n      JSON.stringify({ v1: 1, ...location.lesson })\n    );\n\n    // Update progress\n    progressPercentage = progressPercentage || 0;\n    service.setValue('cmi.progress_measure', progressPercentage);\n\n    service.commit();\n  },\n  getLocation: () => {\n    // {m:1, l:1, s?:3} || {} || null\n    try {\n      return JSON.parse(service.getValue('cmi.location'));\n    } catch (e) {\n      return {};\n    }\n  },\n  start: () => {\n    service._time.startTime = new Date();\n    service.getAPI(window);\n\n    if (!service.API) {\n      throw 'MISSING_SCORM_API';\n    }\n\n    service.init = true;\n\n    service.initialize();\n\n    const completionStatus = service.getValue('cmi.completion_status');\n\n    if (completionStatus === 'unknown') {\n      service.setValue('cmi.completion_status', 'incomplete');\n      service.setValue('cmi.success_status', 'unknown');\n      service.setValue('cmi.suspend_data', '{}');\n    } else {\n      service.setValue(\n        'cmi.score.scaled',\n        service.getValue('cmi.score.scaled')\n      );\n      service.setValue('cmi.score.raw', service.getValue('cmi.score.raw'));\n      service.setValue(\n        'cmi.success_status',\n        service.getValue('cmi.success_status')\n      );\n      service.setValue(\n        'cmi.progress_measure',\n        service.getValue('cmi.progress_measure')\n      );\n      service.setValue(\n        'cmi.completion_status',\n        service.getValue('cmi.completion_status')\n      );\n\n    }\n\n    // until we have things hooked up to exit buttons/nav, set exit to 'suspend' as part of start() so that status persists whether the user finishes or exits\n    service.setValue('cmi.exit', 'suspend');\n\n    service.commit();\n\n    return {\n      error: false,\n    };\n  },\n  finish: () => {\n    service.setValue('cmi.score.min', 0);\n    service.setValue('cmi.score.max', 100);\n    service.setValue('cmi.score.scaled', 1);\n    service.setValue('cmi.score.raw', 100);\n    service.setValue('cmi.success_status', 'passed');\n    service.setValue('cmi.progress_measure', 1);\n    service.setValue('cmi.completion_status', 'completed');\n\n    console.log('SERVICE');\n    console.log(service);\n    service.commit();\n    service.API?.Terminate('');\n  },\n  setValue: (elem, val) => {\n    if (!service.API) {\n      throw 'MISSING_SCORM_API';\n    }\n\n    console.log('API.SetValue', elem, val);\n\n    service.API.SetValue(elem, val);\n\n    // if (service.API.SetValue(elem, val) === 'false') {\n    //   throw {\n    //     message: `SCORM service failed to set ${elem} to ${val}`,\n    //     data: service.getError(true),\n    //   };\n    // }\n\n    return {\n      error: false,\n    };\n  },\n  getValue: (elem) => {\n    if (!service.API) {\n      throw 'MISSING_SCORM_API';\n    }\n\n    const getRes = service.API.GetValue(elem);\n\n    if (getRes === 'false') {\n      throw {\n        message: `SCORM service failed to get ${elem}`,\n        data: service.getError(true),\n      };\n    }\n\n    console.log('API.GetValue', elem, getRes);\n\n    return getRes;\n  },\n};\n\nexport default {\n  service,\n}\n"],"names":[],"version":3,"file":"scrowl.runtime.js.map"}