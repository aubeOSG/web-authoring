name: Dev Release Workflow
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  check_changes:
    runs-on: ubuntu-latest
    name: Check for latest commit
    outputs:
      has-recent-update: ${{ steps.has-recent-update.outputs.has-recent-update }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: has-recent-update
        continue-on-error: true
        name: Check for Recent Update
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) &amp;&amp; echo "::set-output name=has-recent-update::false"
  releases-dev:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.has-recent-update != 'false' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0 # matching Elctron's (20.X) version of node
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Prebuild
        run: yarn run update

      - name: Move into Editor
        run: cd packages/editor

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn run package

      - name: Pre-Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Development Build
          files: |
            packages/editor/release/build/Scrowl-*.dmg
